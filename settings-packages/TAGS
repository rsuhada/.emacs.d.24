
/Users/rs/data1/sw/esaspi/cosmo/cosmo_dist.py,2322
c = float64(2.99792458e+5)                  #  speed of light in km/sc29,1672
def resolve_curvature(omega_k_0, omega_m_0, omega_de_0):resolve_curvature31,1743
def ez_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, omega_r=0.0, w=-1.0):ez_func41,1981
def div_ez_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):div_ez_func51,2382
def dist_hubble(z=0.0, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_hubble63,2791
def dist_comov_rad(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_comov_rad74,3123
def dist_comov_trans(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_comov_trans89,3693
def dist_ang(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_ang112,4807
def dist_lum(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_lum122,5158
def comov_vol(z=0.0, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):comov_vol132,5505
def dvdz(z=0.5, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dvdz157,6424
def batch_dist_ang(z, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):batch_dist_ang172,7093
def batch_dist_lum(z, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):batch_dist_lum182,7400
    w=-0.5w205,8045
    z=3.0z206,8056
    h_0=70.0h_0207,8066
    omega_m_0=0.3omega_m_0208,8079
    omega_de_0=0.7omega_de_0209,8097
    omega_k_0=0.0omega_k_0210,8116
    ez=ez_func(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)ez212,8135
    dh = dist_hubble(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)dh213,8234
    dc = dist_comov_rad(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)dc214,8339
    dm = dist_comov_trans(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)dm215,8447
    da = dist_ang(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)da216,8557
    dl = dist_lum(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)dl217,8659

/Users/rs/data1/sw/esaspi/cosmo/cosmo_lss.py,4243
c = float64(2.99792458e+8)                # [m/s]c31,1383
G = float64(6.67300e-11)                  # m**3/kg/s**2G32,1433
m2mpc = float64(1.0/3.08568025e+22)m2mpc33,1490
kg2msol = float64(1.0/1.98892e+30)kg2msol34,1526
def sugiyama_gamma(h_0=70, omega_m_0=0.3, omega_b_0=0.05):sugiyama_gamma37,1563
def omega_m_z_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999):omega_m_z_func49,2141
def rho_crit_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999):rho_crit_func57,2420
def rho_m_z_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999):rho_m_z_func69,2897
def growth_supress_lcdm(omega_m_z = 0.3):growth_supress_lcdm80,3288
def mass2linscale(m=1.0e+15, rho_m_z = 4.0e+10):mass2linscale94,3600
def sigma_8_z_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0 = 0.75):sigma_8_z_func103,3884
def gamma_exp_func(r=1.0, h_0=70, omega_m_0=0.3, omega_b_0=0.05):gamma_exp_func115,4300
def sigma_m_z_func(m=1.0, z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0 = 0.75):sigma_m_z_func125,4637
def Dsigm_m_z_Dm_approx(m=1.0, z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999):Dsigm_m_z_Dm_approx138,5308
def jenkins(sigma_m_z = 0.8):jenkins157,6108
def press_schechter(sigma_m_z = 0.8):press_schechter169,6464
def tinker08(sigma_m_z = array((0.0)), z=0.0, delta=200.0):tinker08179,6784
def num_counts(m=1.0, mass_func='press_schechter', z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0=0.8):num_counts202,7426
def mass_integrate_num_counts(mmin=1.0e+13, mass_func='press_schechter', z=0.0, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0=0.8):mass_integrate_num_counts220,8221
def n_z(mass_func='press_schechter', mmin=1.0, z=0.0, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0=0.8):n_z226,8617
def virial_overdensity(omegamz):virial_overdensity236,9378
def c_bullock01(z=0.5, m_vir=1.0e14, m_star=2.112676e13):c_bullock01248,9769
    h_0=70.0h_0518,22318
    omega_dm_0 = 0.25omega_dm_0519,22331
    omega_b_0 = 0.05omega_b_0520,22353
    omega_m_0 = omega_dm_0 + omega_b_0omega_m_0521,22374
    omega_de_0 = 0.7omega_de_0522,22413
    omega_k_0 = 1.0 - omega_m_0 - omega_de_0omega_k_0523,22434
    sigma_8_0 = 0.8sigma_8_0524,22479
    npoints=120npoints526,22500
    z = linspace(0, 1.2, npoints)z528,22517
    omega_m_z = zeros(npoints, dtype=float64)omega_m_z529,22551
    delta_vir = zeros(npoints, dtype=float64)delta_vir530,22597
    import matplotlib.pyplot as pltmatplotlib539,22922
    import matplotlib.pyplot as pltplt539,22922
    import matplotlib.font_managermatplotlib540,22958
    import matplotlib.font_managerfont_manager540,22958
    fig_obj = plt.figure()fig_obj548,23303
    fig_name='delta_virial_z.png'fig_name549,23330
    headline_text = fig_obj.text(0.5, 0.95, '',headline_text550,23364
               horizontalalignment='center',horizontalalignment551,23412
               fontproperties=matplotlib.font_manager.FontProperties(size=16))fontproperties552,23457
    ax1 = fig_obj.add_subplot(111)                         # rows/cols/num of plotax1554,23537
             color='black',color561,23833
             linestyle='-',              # -/--/-./:linestyle562,23861
                 linewidth=1,                # linewidth=1linewidth563,23914
             marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker564,23973
             markerfacecolor='black',markerfacecolor565,24042
             markersize=0,               # markersize=6markersize566,24080
             label=r"data"               # '__nolegend__'label567,24136
    prop = matplotlib.font_manager.FontProperties(size=16)  # size=16prop585,24873

/Users/rs/data1/sw/esaspi/py/collect-spec-results.py,941
import syssys2,22
import osos3,33
import mathmath4,43
import rere6,75
def parse_xspec_err_log(f, parid):parse_xspec_err_log8,86
def parse_xspec_log(f, parid):parse_xspec_log48,1061
    intab = '/Users/rs/w/xspt/data/SPT-CL-J0205-5829/spec/012/SPT-CL-J0205-5829-012-fx-lx-err.log'intab79,1829
    paramater="luminosity"paramater81,1929
    f = open(intab, "r")f82,1956
    lx_abs = array(lx_abs)lx_abs87,2087
    lx_abs_err_lo = array(lx_abs_err_lo)lx_abs_err_lo88,2114
    lx_abs_err_hi = array(lx_abs_err_hi)lx_abs_err_hi89,2155
    intab2 = '/Users/rs/w/xspt/data/SPT-CL-J0205-5829/spec/012/SPT-CL-J0205-5829-012-fx-lx.log'intab297,2397
    f = open(intab2, "r")f98,2493
    lx = array(parse_xspec_log(f, paramater))lx99,2519
    correction = lx - lx_abscorrection102,2579
    lx_err_lo = lx_abs_err_lo + correction - lxlx_err_lo103,2608
    lx_err_hi = lx_abs_err_hi + correction - lxlx_err_hi104,2656

/Users/rs/data1/sw/esaspi/py/collect-spec-results.py~,941
import syssys2,22
import osos3,33
import mathmath4,43
import rere6,75
def parse_xspec_err_log(f, parid):parse_xspec_err_log8,86
def parse_xspec_log(f, parid):parse_xspec_log48,1061
    intab = '/Users/rs/w/xspt/data/SPT-CL-J0205-5829/spec/012/SPT-CL-J0205-5829-012-fx-lx-err.log'intab79,1829
    paramater="luminosity"paramater81,1929
    f = open(intab, "r")f82,1956
    lx_abs = array(lx_abs)lx_abs87,2087
    lx_abs_err_lo = array(lx_abs_err_lo)lx_abs_err_lo88,2114
    lx_abs_err_hi = array(lx_abs_err_hi)lx_abs_err_hi89,2155
    intab2 = '/Users/rs/w/xspt/data/SPT-CL-J0205-5829/spec/012/SPT-CL-J0205-5829-012-fx-lx.log'intab297,2397
    f = open(intab2, "r")f98,2493
    lx = array(parse_xspec_log(f, paramater))lx99,2519
    correction = lx - lx_abscorrection102,2579
    lx_err_lo = lx_abs_err_lo + correction - lxlx_err_lo103,2608
    lx_err_hi = lx_abs_err_hi + correction - lxlx_err_hi104,2656

/Users/rs/data1/sw/esaspi/py/esaspi_utils.py,1003
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import picklepickle11,251
def forprint(*args):forprint15,288
def show_in_ds9(fits_image):show_in_ds930,549
def ds9imcoord2py(coord):ds9imcoord2py45,917
def py2ds9imcoord(pyindex):py2ds9imcoord54,1093
def iplot(x, y):iplot63,1266
def print_lmfit_result_tab(pars_true, pars_fit):print_lmfit_result_tab93,2053
def lmfit_result_to_dict(result_obj, par_obj):lmfit_result_to_dict106,2592

/Users/rs/data1/sw/esaspi/py/lmfit/confidence.py,733
import numpy as npnp27,721
def f_compare(Ndata, Nparas, new_chi, best_chi, Nfix=1.):f_compare35,942
def copy_vals(params):copy_vals51,1370
def restore_vals(tmp_params, params):restore_vals61,1645
def p_trace_to_dict(p_tr, params):p_trace_to_dict69,1872
def conf_interval(minimizer, p_names=None, sigmas=(0.674, 0.95, 0.997),conf_interval85,2248
        def calc_prob(val, offset=0., restore=False):calc_prob194,5599
        def search_limits(direction):search_limits215,6384
def conf_interval2d(minimizer, x_name, y_name, nx=10, ny=10, limits=None,conf_interval2d280,8406
    def calc_prob(vals, restore=False):calc_prob353,10578

/Users/rs/data1/sw/esaspi/py/lmfit/minimizer.py,3218
HAS_SCALAR_MIN = FalseHAS_SCALAR_MIN45,1510
    HAS_SCALAR_MIN = TrueHAS_SCALAR_MIN48,1596
HAS_UNCERT = FalseHAS_UNCERT53,1676
    import uncertaintiesuncertainties55,1700
    HAS_UNCERT = TrueHAS_UNCERT56,1725
class MinimizerException(Exception):MinimizerException65,1890
    def __init__(self, msg):__init__67,1963
    def __str__(self):__str__71,2049
def check_ast_errors(error):check_ast_errors74,2108
class Minimizer(object):Minimizer83,2348
     "params must be a minimizer.Parameters() instance or list of Parameters()"err_nonparam86,2422
    def __init__(self, userfcn, params, fcn_args=None, fcn_kws=None,__init__91,2678
    def __update_paramval(self, name):__update_paramval115,3417
    def update_constraints(self):update_constraints138,4320
    def __residual(self, fvars):__residual145,4607
    def __jacobian(self, fvars):__jacobian167,5514
    def __set_params(self, params):__set_params182,6035
    def prepare_fit(self, params=None):prepare_fit205,6877
    def anneal(self, schedule='cauchy', **kws):anneal249,8613
        def penalty(params):penalty264,9013
    def lbfgsb(self, **kws):lbfgsb275,9351
        def penalty(params):penalty286,9725
    def fmin(self, **kws):fmin299,10108
        def ret_ndata(params):ret_ndata314,10675
        def penalty(params):penalty321,10942
    def scalar_minimize(self, method='Nelder-Mead', hess=None, tol=None, **kws):scalar_minimize345,11703
        def penalty(params):penalty381,12808
    def leastsq(self, scale_covar=True, **kws):leastsq394,13184
def minimize(fcn, params, method='leastsq', args=None, kws=None,minimize512,17595

/Users/rs/data1/sw/esaspi/py/physconstants.py,1417
import mathmath5,99
cc_cgs = 2.99792458e10                        # Speed of light [cgs]cc_cgs11,207
bk_cgs = 1.3806503e-16                        # Boltzmann's constant [cgs]bk_cgs12,276
hp_cgs = 6.62606876e-27                       # Planck's constant [cgs]hp_cgs13,351
mp_cgs = 1.67262158e-24                   # Proton rest mass [cgs]mp_cgs16,431
me_cgs = 9.10938188e-28                       # Electron rest mass [cgs]me_cgs17,498
msun_cgs = 1.989e33                           # grams, Solar Mass [cgs]msun_cgs24,668
mpc_to_cm = 3.085677582e24                # megaparsec [cgs]mpc_to_cm27,752
kpc_to_cm = 3.085677582e21                # megaparsec [cgs]kpc_to_cm28,813
cm_to_mpc = 1.0 / mpc_to_cmcm_to_mpc29,874
cm_to_kpc = 1.0 / kpc_to_cmcm_to_kpc30,902
mu_e_feldman92 = 1.167mu_e_feldman9237,1068
mu_h_feldman92 = 1.400mu_h_feldman9238,1091
degree_to_radian = math.pi/(180.0)degree_to_radian44,1197
arcmin_to_radian = math.pi/(180.0 * 60.0)arcmin_to_radian45,1232
arcsec_to_radian = math.pi/(180.0 * 3600.0)arcsec_to_radian46,1274
radian_to_degree = 1.0 / degree_to_radianradian_to_degree48,1319
radian_to_arcmin = 1.0 / arcmin_to_radianradian_to_arcmin49,1361
radian_to_arcsec = 1.0 / arcsec_to_radianradian_to_arcsec50,1403
jy_to_si = 1.0e-26              # [W m**-2 Hz**-1]jy_to_si55,1526
jy_to_cgs = 1.0e-23             # [erg s**-1 cm**-2 Hz**-1]jy_to_cgs56,1577

/Users/rs/data1/sw/esaspi/py/scal_rel_lib.py,3336
import mathmath2,22
def LT_markevitch98(luminosity, func_ez):LT_markevitch989,168
def LT_markevitch98_err(luminosity, luminosity_err, func_ez):LT_markevitch98_err20,457
def LT_gwp09(luminosity, func_ez):LT_gwp0935,839
def LT_gwp09_err(luminosity, luminosity_err, func_ez):LT_gwp09_err46,1128
def LT_gwp09_bol(luminosity_bol, func_ez):LT_gwp09_bol67,1740
def LT_gwp09_bol_err(luminosity_bol, luminosity_bol_err, func_ez):LT_gwp09_bol_err78,2035
def LM_gwp09(luminosity, func_ez):LM_gwp09104,2890
def LM_gwp09_err(luminosity, luminosity_err, func_ez):LM_gwp09_err120,3477
def LM_gwp09_bol(luminosity_bol, func_ez):LM_gwp09_bol145,4386
def LM_gwp09_bol_err(luminosity_bol, luminosity_bol_err, func_ez):LM_gwp09_bol_err159,4785
def LM_vikhlinin09(luminosity, func_ez):LM_vikhlinin09182,5571
def LM_vikhlinin09_err(luminosity, luminosity_err, func_ez):LM_vikhlinin09_err195,5964
def LM_mantz10(luminosity, luminosity_err, func_ez):LM_mantz10220,6714
def LT_gwp09_bol_noevol(luminosity_bol, func_ez):LT_gwp09_bol_noevol256,7563
def LT_gwp09_bol_noevol_err(luminosity_bol, luminosity_bol_err, func_ez):LT_gwp09_bol_noevol_err267,7864
def LM_gwp09_bol_noevol(luminosity_bol, func_ez):LM_gwp09_bol_noevol290,8613
def LM_gwp09_bol_noevol_err(luminosity_bol, luminosity_bol_err, func_ez):LM_gwp09_bol_noevol_err304,9019
def MT_vikhlinin09(temperature, temperature_err, func_ez, h):MT_vikhlinin09336,10107
def MT_finoguenov01(temperature, func_ez):MT_finoguenov01374,11291
def MT_finoguenov01_err(temperature, temperature_err, func_ez):MT_finoguenov01_err384,11493
def MT_arnaud05(temperature, func_ez):MT_arnaud05398,11779
def MT_arnaud05_err(temperature, temperature_err, func_ez):MT_arnaud05_err416,12254
def M200T_arnaud05(temperature, func_ez):M200T_arnaud05438,12814
def M200T_arnaud05_err(temperature, temperature_err, func_ez):M200T_arnaud05_err456,13292
def TT_vikhlinin09(temperature, temperature_err):TT_vikhlinin09489,14158
def RT_finoguenov01(temperature, func_ez):RT_finoguenov01521,15026
def RT_finoguenov01_err(temperature, temperature_err, func_ez):RT_finoguenov01_err531,15224
def RT_arnaud05(temperature, func_ez):RT_arnaud05545,15506
def RT_arnaud05_err(temperature, temperature_err, func_ez):RT_arnaud05_err564,15954
def R200T_arnaud05(temperature, func_ez):R200T_arnaud05586,16486
def R200T_arnaud05_err(temperature, temperature_err, func_ez):R200T_arnaud05_err604,16938
def r_overdensity(overdensity, mass, mass_err, func_ez):r_overdensity628,17597
def MYx_arnaud07(mass, func_ez):MYx_arnaud07647,18112
def MYx_arnaud07_err(mass, mass_err, func_ez):MYx_arnaud07_err662,18479
def MYx_vikhlinin09(m500, m500_err, ez, h):MYx_vikhlinin09679,18957
def MYsz_andersson11(m500, m500_err, ez):MYsz_andersson11702,19620
def LY_gwp09(luminosity, func_ez):LY_gwp09729,20252
def LY_gwp09_err(luminosity, luminosity_err, func_ez):LY_gwp09_err741,20589
def LY_gwp09_bol(luminosity, func_ez):LY_gwp09_bol763,21244
def LY_gwp09_bol_err(luminosity, luminosity_err, func_ez):LY_gwp09_bol_err775,21584
def LY_gwp09_bol_noevol(luminosity, func_ez):LY_gwp09_bol_noevol798,22349
def LY_gwp09_bol_noevol_err(luminosity, luminosity_err, func_ez):LY_gwp09_bol_noevol_err811,22720
def spt_zeta(m500c, redshift):spt_zeta838,23628
def spt_xi(zeta):spt_xi859,24200

/Users/rs/data1/sw/esaspi/py/t_to_r.py,2349
import syssys1,0
import osos2,11
import mathmath3,21
import stringstring4,33
import scal_rel_libscal_rel_lib7,108
def read_xspec_result_file(infile):read_xspec_result_file9,129
def write_par_output(tofile=0):write_par_output31,597
    FILE_PAR_OUTPUT=1          # write rounded output to file?FILE_PAR_OUTPUT124,3922
    h_0 = 70.0h_0131,4204
    omega_m_0 = 0.3omega_m_0132,4219
    omega_de_0 = 0.7omega_de_0133,4239
    omega_k_0 = 0.0omega_k_0134,4260
    overdensity = 500.0         # with respect to critical densityoverdensity135,4280
    h = h_0/100.0h137,4348
    SCALING_OPTION=1SCALING_OPTION148,4618
    parfile = sys.argv[1]parfile152,4754
    results = read_xspec_result_file(parfile)results153,4780
    norm = float(results[0])norm155,4827
    norm_err_n = float(results[1])norm_err_n156,4856
    norm_err_p = float(results[2])norm_err_p157,4891
    t = float(results[3])t159,4927
    t_err_n = float(results[4])t_err_n160,4953
    t_err_p = float(results[5])t_err_p161,4985
    z = float(results[6])z163,5018
    z_err_n = float(results[7])z_err_n164,5044
    z_err_p = float(results[8])z_err_p165,5076
    abund = float(results[9])abund167,5109
    abund_err_n = float(results[10])abund_err_n168,5139
    abund_err_p = float(results[11])abund_err_p169,5176
    t = float(t)t171,5214
    t_err = 0.5 * (abs(float(t_err_n)) + float(t_err_p))t_err172,5231
    z = float(z)z173,5288
    ez = ez_func(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0)ez182,5523
    da = dist_ang(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0) # [Mpc]da183,5619
    ang_scale = da * math.tan(math.pi/(180.0*3600.0))            # [Mpc/asec]ang_scale184,5724
        r500 = scal_rel_lib.r_overdensity(overdensity, m500, m500_err, ez)[0] # [Mpc]r500194,6174
        r500_ang = r500 / ang_scale # [asec]r500_ang195,6260
        rfit_ang = r500_angrfit_ang196,6305
        r500 = scal_rel_lib.r_overdensity(overdensity, m500, m500_err, ez)[0] # [Mpc]r500206,6740
        r500_ang = r500 / ang_scale # [asec]r500_ang207,6826
        rfit_ang = 0.5 * r500_ang   # fit only in the half aperturerfit_ang208,6871

/Users/rs/data1/sw/esaspi/py/test/a133_v06_lmfit_test.py,1658
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import lmfit as lmlm12,276
import timetime17,401
def print_result_tab(pars_true, pars_fit):print_result_tab21,443
def fit_a133_sb(fname='cluster-im-v06-psf.fits'):fit_a133_sb88,2824
theta = 65.8443 / 60.0theta263,8716
energy = 1.5energy264,8739
instrument = "pn"instrument265,8752
psf_pars = (instrument, theta, energy)psf_pars267,8771
num_cts       = 2.0e5             # Will be the normalizationnum_cts270,8838
r500 = 1.0e3                # r500 [kpc]r500273,8914
r500_pix = 30              # r500 in im pixelsr500_pix274,8955
n0 = 7e+0n0276,9003
rc = 20.0                   # ballpark 0.1 r500rc277,9013
beta = 2.0/3.0beta278,9061
rs = 20.0                   # ballpark 0.5-1 r500rs279,9076
alpha = 1.5                 # <3alpha280,9126
gamma = 3.0                 # fix = 3gamma281,9159
epsilon = 2.0               # <5epsilon282,9197
pars_true = lm.Parameters()pars_true284,9231
im_file = 'v06_image_cts.fits'im_file293,9580
import test_2d_imtest_2d_im295,9612

/Users/rs/data1/sw/esaspi/py/test/calc_mgas.py,3610
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import asciitableasciitable11,251
TEST_MODEL_NAME = 'beta'    # beta, v06modTEST_MODEL_NAME23,540
h_0=70.2h_027,643
omega_m_0=0.272omega_m_028,652
omega_de_0=0.728omega_de_029,668
omega_k_0=0.0omega_k_030,685
z = 0.6112z33,717
r500 = 1043.0                    # [kpc]r50034,728
fname='/Users/rs/w/xspt/data/dev/0559/sb/SPT-CL-J0559-5249-run-001-radial-master.tab'fname38,810
data = asciitable.read(table=fname)data39,896
rproj2_ang_array = data['r_fit']rproj2_ang_array41,933
rproj1_ang_array = 0.15 * rproj2_ang_arrayrproj1_ang_array42,966
norm_array       = data['norm']norm_array43,1009
norm_err_n_array = abs(data['norm_err_n'])norm_err_n_array44,1041
norm_err_p_array = data['norm_err_p']norm_err_p_array45,1084
pixscale = 2.5       # [arcsec]pixscale49,1149
beta = 0.974467beta51,1182
beta_err =  0.148686beta_err52,1198
beta_norm = 0.001095beta_norm53,1219
beta_norm_err = 0.000145beta_norm_err54,1240
rcore = 14.230824 * pixscale         # [arcsec]rcore55,1265
rcore_err = 2.877397 * pixscalercore_err56,1313
da = dist_ang(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0) # [Mpc]da62,1458
angscale = arcsec_to_radian * da * 1000.0 # [kpc/arcsec]angscale63,1559
VALID_MODEL = FalseVALID_MODEL67,1667
    model_name = TEST_MODEL_NAMEmodel_name70,1718
    VALID_MODEL = TrueVALID_MODEL71,1751
    model_pars = (rcore, beta)model_pars74,1816
    rcore_phy = rcore * pixscale * arcsec_to_radian * da * 1000.0 # [kpc]rcore_phy77,1890
    model_pars_phy = (rcore_phy, beta)model_pars_phy78,1964
    model_name = TEST_MODEL_NAMEmodel_name81,2038
    VALID_MODEL = TrueVALID_MODEL82,2071
    rc = 20.0                   # ballpark 0.1 r500, [pix]rc84,2095
    beta = 2.0/3.0beta85,2154
    rs = 20.0                   # ballpark 0.5-1 r500, [pix]rs86,2173
    alpha = 1.5                 # <3alpha87,2234
    gamma = 3.0                 # fix = 3gamma88,2271
    epsilon = 2.0               # <5epsilon89,2313
    model_pars = (alpha, beta, gamma, epsilon, rc, rs)model_pars91,2351
    rc_phy = rc * pixscale * arcsec_to_radian * da * 1000.0 # [kpc]rc_phy94,2449
    rs_phy = rc * pixscale * arcsec_to_radian * da * 1000.0 # [kpc]rs_phy95,2517
    model_pars_phy = (alpha, beta, gamma, epsilon, rc_phy, rs_phy)model_pars_phy96,2585
    rproj2_ang  = rproj2_ang_array[i]rproj2_ang104,2806
    rproj1_ang  = rproj1_ang_array[i]rproj1_ang105,2844
    norm_dat  = array((norm_array[i], norm_err_n_array[i], norm_err_p_array[i]))norm_dat106,2882
        rho0_dat = spec_norm_to_density(norm_dat, z, da, rproj1_ang, rproj2_ang, model_name, model_pars)rho0_dat116,3189
        ne0_dat = rho0_dat / (mu_e_feldman92 * mp_cgs)ne0_dat119,3341
        r2 = r500                   # [kpc]r2123,3500
        r1 = 0.15 * r500            # [kpc]r1125,3590
        mgas_dat = calc_gas_mass(model_name, model_pars_phy, rho0_dat, r1, r2)mgas_dat127,3635
        mgas = mgas_dat[0]mgas129,3715

/Users/rs/data1/sw/esaspi/py/test/calc_mgas_cluster.py,4352
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import asciitableasciitable11,251
import picklepickle13,295
def print_debug_info():print_debug_info16,311
def print_input_info():print_input_info19,438
def output_results():output_results37,780
def print_report(fname=None):print_report66,1729
def tabulate_gas_mass(model_name, model_pars_phy, rho0, rmin, rmax, rstep, mgas_tab):tabulate_gas_mass84,2126
h_0=70.2h_0143,3878
omega_m_0=0.272omega_m_0144,3887
omega_de_0=0.728omega_de_0145,3903
omega_k_0=0.0omega_k_0146,3920
pixscale = 2.5       # [arcsec/pix]pixscale149,3963
z = double(sys.argv[1])z152,4017
r500 = double(sys.argv[2])r500153,4041
xspec_fname = sys.argv[3]xspec_fname154,4068
fitted_pars_file = sys.argv[4]fitted_pars_file155,4094
TEST_MODEL_NAME = sys.argv[5]TEST_MODEL_NAME156,4125
    fitted_pars = pickle.load(input)fitted_pars169,4630
beta = fitted_pars['params']['beta']['value']beta171,4668
rcore = fitted_pars['params']['rcore']['value'] * pixscale      # fit is in pix, here converted to [arcsec]rcore172,4714
beta_err = fitted_pars['params']['beta']['stderr']beta_err175,4876
rcore_err = fitted_pars['params']['rcore']['stderr'] * pixscale # fit is in pix, here converted to [arcsec]rcore_err176,4927
data = asciitable.read(table=xspec_fname, data_start=0)data183,5261
rproj2_ang_array = data['r_fit']rproj2_ang_array185,5318
rproj1_ang_array = 0.15 * rproj2_ang_arrayrproj1_ang_array186,5351
norm_array       = data['norm']norm_array188,5438
norm_err_n_array = abs(data['norm_err_n'])norm_err_n_array189,5470
norm_err_p_array = data['norm_err_p']norm_err_p_array190,5513
mgas_results_fname=fitted_pars_file+'.mgas'mgas_results_fname200,5742
mgas_tab_fname=fitted_pars_file+'.mgas.tab'mgas_tab_fname201,5786
da = dist_ang(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0) # [Mpc]da207,5943
angscale = arcsec_to_radian * da * 1000.0 # [kpc/arcsec]angscale208,6044
VALID_MODEL = FalseVALID_MODEL211,6151
    model_name = TEST_MODEL_NAMEmodel_name214,6202
    VALID_MODEL = TrueVALID_MODEL215,6235
    model_pars = (rcore, beta)                # rcore in [arcsec]model_pars218,6300
    rcore_phy = rcore * angscalercore_phy222,6493
    model_pars_phy = (rcore_phy, beta)model_pars_phy223,6526
    model_name = TEST_MODEL_NAMEmodel_name230,6698
    VALID_MODEL = TrueVALID_MODEL231,6731
    rc = 20.0                   # ballpark 0.1 r500, [pix]rc233,6755
    beta = 2.0/3.0beta234,6814
    rs = 20.0                   # ballpark 0.5-1 r500, [pix]rs235,6833
    alpha = 1.5                 # <3alpha236,6894
    gamma = 3.0                 # fix = 3gamma237,6931
    epsilon = 2.0               # <5epsilon238,6973
    model_pars = (alpha, beta, gamma, epsilon, rc, rs)model_pars240,7011
    rc_phy = rc * pixscale * arcsec_to_radian * da * 1000.0 # [kpc]rc_phy243,7109
    rs_phy = rc * pixscale * arcsec_to_radian * da * 1000.0 # [kpc]rs_phy244,7177
    model_pars_phy = (alpha, beta, gamma, epsilon, rc_phy, rs_phy)model_pars_phy245,7245
    rproj2_ang  = rproj2_ang_array[i]rproj2_ang255,7579
    rproj1_ang  = rproj1_ang_array[i]rproj1_ang256,7617
    norm_dat  = array((norm_array[i], norm_err_n_array[i], norm_err_p_array[i]))norm_dat257,7655
        ne0_dat = rho0_dat / (mu_e_feldman92 * mp_cgs)ne0_dat268,8075
        r2 = r500                   # [kpc]r2271,8162
        r1 = 0.0                    # [kpc]r1272,8206
        rstep = 10              # kpcrstep274,8296
        rmin = 0.0            # [kpc]rmin282,8566
        rmax = 2.0 * r500     # [kpc]rmax283,8604
        rstep = 10.0          # [kpc]rstep284,8642
        mgas_dat = calc_gas_mass(model_name, model_pars_phy, rho0_dat, r1, r2)mgas_dat294,9013

/Users/rs/data1/sw/esaspi/py/test/prof_bin.py,3757
import syssys1,0
import osos2,11
import mathmath3,21
import matplotlib.pyplot as pltmatplotlib6,74
import matplotlib.pyplot as pltplt6,74
import matplotlib.font_managermatplotlib7,106
import matplotlib.font_managerfont_manager7,106
import lmfit as lmlm14,502
import timetime15,521
import asciitable as atabatab16,533
import picklepickle17,559
cluster='SPT-CL-J0559-5249'cluster21,612
profile_id='003'profile_id22,640
r500_pix=float("60.0")      # [pixel]r500_pix23,657
fitid='binning_test'fitid24,695
theta_pn="65.8443"                 # [arcsec]theta_pn25,716
theta_mos1="65.8443"                 # [arcsec]theta_mos126,762
theta_mos2="65.8443"                 # [arcsec]theta_mos227,810
energy="1.5"                # [keV]energy28,858
MODEL="v06"MODEL29,894
MAKE_CONTROL_PLOT=TrueMAKE_CONTROL_PLOT30,906
INSTRUMENT_SETUP="joint"       # "single" or "joint"INSTRUMENT_SETUP31,929
instruments=("pn") # any for individual, or "joint" "on" "mos1" etc.instruments33,1063
prof_fname_pn="/Users/rs/w/xspt/data/dev/0559/sb/"+cluster+"/sb-prof-pn-"+profile_id+".dat"prof_fname_pn37,1167
prof_fname_mos1="/Users/rs/w/xspt/data/dev/0559/sb/"+cluster+"/sb-prof-mos1-"+profile_id+".dat"prof_fname_mos138,1259
prof_fname_mos2="/Users/rs/w/xspt/data/dev/0559/sb/"+cluster+"/sb-prof-mos2-"+profile_id+".dat"prof_fname_mos239,1355
sb_file = {sb_file64,2246
theta = {theta70,2352
sb_src = {}sb_src77,2467
sb_bg = {}sb_bg78,2479
sb_src_err = {}sb_src_err79,2490
sb_bg_err = {}sb_bg_err80,2506
    ids = where(r<=1.5*r500_pix)ids95,2914
    r = r[ids]r96,2947
    n = len(r)n103,3172
        outfig = sb_file[instrument]+'.'+fitid+'.png'outfig107,3248
rbin = optibingrid(binnum=20, rmax=1.5*r500_pix, c=1.5)rbin118,3645
min_dist = 1.0    # [pix]min_dist122,3799
rbin=hstack((0.0, rbin[rbin>=min_dist]))rbin123,3825
mid = [(rbin[i] + rbin[i+1])/2.0 for i in range(len(rbin)-1)]mid126,3929
mid_range = rbin[1:] - midmid_range127,3991
x = sb_src['pn'][:len(r)]x131,4068
x_err = sb_src_err['pn'][:len(r)]x_err132,4094
xb = histogram(r, bins=rbin, weights=x)[0]xb134,4129
xb_err = histogram(r, bins=rbin, weights=x_err)[0]xb_err135,4172
num = histogram(r, bins=rbin)[0]num137,4224
    color='red',color157,4701
    linestyle='',              # -/--/:/-.linestyle158,4718
    linewidth=1,                # linewidth=1linewidth159,4761
    marker='o',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker160,4807
    markerfacecolor='red',markerfacecolor161,4868
    markersize=8,               # markersize=6markersize162,4895
    label=r"binned"               # '__nolegend__'label163,4942

/Users/rs/data1/sw/esaspi/py/test/sb_models.py,3925
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import timetime6,69
import matplotlib.pyplot as pltmatplotlib10,159
import matplotlib.pyplot as pltplt10,159
import matplotlib.font_managermatplotlib11,191
import matplotlib.font_managerfont_manager11,191
def beta_2d_lmfit(pars, data=None, errors=None):beta_2d_lmfit19,597
def beta_1d_lmfit(pars, r, data_profile=None, data_profile_err=None):beta_1d_lmfit93,3078
def beta_2d_lmfit_profile(pars, imsize=None, data_profile=None, data_profile_err=None):beta_2d_lmfit_profile119,3674
def make_2d_beta_psf(pars, imsize, xsize_obj, ysize_obj, instrument, im_psf, APPLY_PSF, DO_ZERO_PAD):make_2d_beta_psf175,5686
def v06_funct(r, rc, rs, n0, alpha, beta, gamma, epsilon):v06_funct215,7132
def v06_funct_los(l, b, rc, rs, n0, alpha, beta, gamma, epsilon):v06_funct_los228,7583
def v06_full_funct(r, rc, rs, n0, alpha, beta, gamma, epsilon, n02, rc2, beta2):v06_full_funct248,8228
def v06_full_funct_los(l, b, rc, rs, n0, alpha, beta, gamma, epsilon, n02, rc2, beta2):v06_full_funct_los261,8716
def make_2d_v06(distmatrix, bgrid, r500, rc, rs, n0, alpha, beta, gamma, epsilon):make_2d_v06280,9392
def make_2d_v06_psf(pars, distmatrix, bgrid, r500, instrument, im_psf):make_2d_v06_psf307,10082
def beta_psf_2d_lmfit_profile(pars, imsize, xsize_obj, ysize_obj,beta_psf_2d_lmfit_profile332,10816
def beta_psf_2d_lmfit_profile_joint(pars, imsize, xsize_obj, ysize_obj,beta_psf_2d_lmfit_profile_joint383,12772
def v06_psf_2d_lmfit_profile(pars,distmatrix,bgrid,r500,instrument, theta, energy,v06_psf_2d_lmfit_profile455,15429
def v06_psf_2d_lmfit_profile_joint(pars,distmatrix,bgrid, rfit,v06_psf_2d_lmfit_profile_joint501,17103
def make_synthetic_observation(srcmodel_file, expmap_file, bgmap_file, maskmap_file, outfile, targ_cts=2000):make_synthetic_observation566,19524

/Users/rs/data1/sw/esaspi/py/test/scratch/amapper.py,750
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
a=arange(1,10).reshape((3,3))a12,252
d=distance_matrix(a,1,1)d13,282
b=d.flatb15,308
b = unique(b)b16,317
p = array((10,20,30))p18,332

/Users/rs/data1/sw/esaspi/py/test/scratch/gen_im_comprehension.py,2152
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import lmfit as lmlm11,251
def beta_2d_lmfit(pars, data=None, errors=None):beta_2d_lmfit16,359
def beta_2d_comprehension_lmfit(pars, data=None, errors=None):beta_2d_comprehension_lmfit51,1422
def beta_2d_comprehension2_lmfit(pars, data=None, errors=None):beta_2d_comprehension2_lmfit90,2611
    xsize = 900xsize138,4000
    ysize = xsizeysize139,4016
    xcen = xsize/2xcen140,4034
    ycen = ysize/2ycen141,4053
    xsize_obj = 100xsize_obj145,4162
    ysize_obj = xsize_objysize_obj146,4182
    xcen_obj = xsize_obj / 2xcen_obj147,4208
    ycen_obj = ysize_obj / 2ycen_obj148,4237
    imsize = (ysize, xsize)imsize150,4267
    pars = lm.Parameters()pars154,4388
            model1 = beta_2d_lmfit(pars)model1172,5102
            model2 = beta_2d_comprehension_lmfit(pars)model2177,5236
        hdr = pyfits.getheader('pn-test.fits')hdr186,5492
        hdu = pyfits.PrimaryHDU(model1, hdr)    # extension - array, headerhdu187,5539
        hdulist = pyfits.HDUList([hdu])                  # list all extensions herehdulist188,5615
        hdu = pyfits.PrimaryHDU(model2, hdr)    # extension - array, headerhdu191,5751
        hdulist = pyfits.HDUList([hdu])                  # list all extensions herehdulist192,5827

/Users/rs/data1/sw/esaspi/py/test/scratch/hist.py,866
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
a = array((1,  2,  3,  4,  5,  6,  7,  8,  9,  10,))a14,259
rgrid = array((1,3,4,8,9,10))rgrid15,312
a = arange(1,10,1).reshape(3,3)a20,454
hist = histogram(a,bins=rgrid,range=(0,10))hist25,508
histsum = histogram(a,bins=rgrid,weights=a)histsum26,552

/Users/rs/data1/sw/esaspi/py/test/scratch/lmfitcont.py,896
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pylab as pltmatplotlib8,110
import matplotlib.pylab as pltplt8,110
import matplotlib.font_managermatplotlib9,141
import matplotlib.font_managerfont_manager9,141
import lmfit as lmlm11,250
x=linspace(0.3,10,100)x13,270
y=3*exp(-x/2.)-5*exp(-x/10.)y14,293
noise = 0.05*random.randn(x.size)noise16,323
y=y+noisey17,357
p=lm.Parameters()p22,385
def residual(p):residual26,454
mi=lm.minimize(residual, p)mi30,561
DO_PLOT = TrueDO_PLOT45,979

/Users/rs/data1/sw/esaspi/py/test/scratch/numintg.py,559
def f(x):f5,99
def intf(x):intf9,136
n = 10n17,226
a = 0.0a18,233
b = float(n - 1)b19,241
b = 1.0b20,258
x = arange(n)x22,267
y = f(x)y23,281
i0 = intf(b) - intf(a)i030,334
i1 = quad(f, a, b)[0]i133,409
i2 = romberg(f, a, b)i236,466
i3 = simps(y[:2], x[:2])i339,523

/Users/rs/data1/sw/esaspi/py/test/scratch/test.py,692
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
a = array(( 2.41421356,  2.0,          2.41421356,a14,259
b = a[1:-1, 1:-1]b27,553

/Users/rs/data1/sw/esaspi/py/test/simple_2d_fit.py,374
def gaussian(height, center_x, center_y, width_x, width_y):gaussian7,190
def moments(data):moments14,482
def fitgaussian(data):fitgaussian29,1002
data = gaussian(3, 100, 100, 20, 40)(Xin, Yin) + random(Xin.shape)data44,1431
params = fitgaussian(data)params49,1553
fit = gaussian(*params)fit50,1580
ax = gca()ax53,1656

/Users/rs/data1/sw/esaspi/py/test/test-psf-prof.py,717
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
    energy = 1.5energy19,364
    theta = 0.3theta20,381
    instrument=("pn", "m1", "m2")instrument22,398

/Users/rs/data1/sw/esaspi/py/test/test_2d_im.py,3377
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,109
import matplotlib.pyplot as pltplt8,109
import matplotlib.font_managermatplotlib9,141
import matplotlib.font_managerfont_manager9,141
import timetime18,479
def get_instrument_id(instrument):get_instrument_id20,492
def resolve_instrument_id(instrument_id):resolve_instrument_id37,792
def make_2d_dirac(imsize, xcen, ycen):make_2d_dirac54,1104
def make_2d_uncorr_gauss(imsize, xcen, ycen, sigmax, sigmay):make_2d_uncorr_gauss69,1418
def king_2d_model(x, y, xcen, ycen, rcore, alpha):king_2d_model88,1984
def trim_fftconvolve(image):trim_fftconvolve105,2524
def make_2d_king_old(imsize, xcen, ycen, instrument, theta, energy):make_2d_king_old122,2935
def make_2d_king(r, instrument, theta, energy):make_2d_king162,4218
def make_2d_beta(imsize, xcen, ycen, norm, rcore, beta):make_2d_beta180,4682
def test_psf_parameter():test_psf_parameter202,5360
def test_create_dirac():test_create_dirac223,5824
def test_create_gauss():test_create_gauss245,6374
def test_create_psf():test_create_psf311,8543
def test_create_beta():test_create_beta349,9606
def test_profile_dirac():test_profile_dirac382,10511
def test_profile_psf():test_profile_psf413,11233
def test_profile_beta():test_profile_beta459,12624
def test_convolve_psf_gauss():test_convolve_psf_gauss500,13837
def test_convolve_psf_beta():test_convolve_psf_beta582,16682
def load_exposure_map():load_exposure_map653,19094
def load_background_map():load_background_map668,19460
def create_background_mask(background_map):create_background_mask678,19690
def build_sb_model_beta(xsize, ysize, xsize_obj, ysize_obj, xcen, ycen, norm, rcore, beta, instrument, theta, energy, APPLY_PSF):build_sb_model_beta691,20199
def test_create_beta_im():test_create_beta_im719,21212
def test_create_cluster_im():test_create_cluster_im766,22603
def minuit_beta_model(r, norm, rcore, beta):minuit_beta_model860,26001
def fit_model_minuit_beta(r, sb_src, sb_src_err, instrument, theta, energy):fit_model_minuit_beta874,26317
    def minuit_beta_model_likelihood(norm, rcore, beta):minuit_beta_model_likelihood899,27268
def fit_model_minuit_beta_psf(r, sb_src, sb_src_err, xsize, ysize, xsize_obj, ysize_obj, xcen, ycen, instid, theta, energy):fit_model_minuit_beta_psf932,28346
    def minuit_sb_model_likelihood(xsize, ysize, xsize_obj, ysize_obj, xcen, ycen, norm, rcore, beta, instid, theta, energy):minuit_sb_model_likelihood959,29474
    def minuit_sb_model_likelihood_debug(xsize, ysize, xsize_obj, ysize_obj, xcen, ycen, norm, rcore, beta, instid, theta, energy):minuit_sb_model_likelihood_debug985,30644
def test_fit_beta():test_fit_beta1081,34619
def test_fit_beta_psf():test_fit_beta_psf1148,36947
def module_visible():module_visible1218,39471

/Users/rs/data1/sw/esaspi/py/test/test_2d_im_lmfit.py,4016
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import lmfit as lmlm12,276
import timetime17,401
def print_result_tab(pars_true, pars_fit):print_result_tab20,442
def iplot(x, y):iplot33,954
def test_lmfit_beta(fname='beta_image_cts.fits'):test_lmfit_beta64,1705
def test_create_beta_im(imname='beta_image_cts.fits'):test_create_beta_im149,4787
def test_lmfit_beta_1d(fname='beta_image_cts.fits'):test_lmfit_beta_1d196,6177
def test_create_beta_psf_im(imname='beta_image_cts.fits'):test_create_beta_psf_im289,9528
def test_create_v06_psf_im(imname='v06_image_cts.fits'):test_create_v06_psf_im376,12409
def test_lmfit_beta_psf_1d(fname='cluster_image_cts.fits'):test_lmfit_beta_psf_1d447,14539
def test_lmfit_v06_psf_1d(fname='cluster-im-v06-psf.fits'):test_lmfit_v06_psf_1d626,21394
def test_prof_extraction_full():test_prof_extraction_full857,29812
DEBUG = TrueDEBUG930,32193
    import test_2d_imtest_2d_im936,32303
    import sb_modelssb_models937,32325
    import sb_utilssb_utils938,32346
    import esaspi_utilsesaspi_utils939,32366
theta = 65.8443 / 60.0theta949,32602
energy = 1.5energy950,32625
instrument = "pn"instrument951,32638
psf_pars = (instrument, theta, energy)psf_pars953,32657
targ_num_cts       = 2.0e3             # Will be the normalizationtarg_num_cts956,32724
rcore         = 10.0              # [pix]rcore957,32791
beta          = 4.0 / 3.0beta958,32833
normalization = 1.0normalization959,32859
imname='t1.fits'imname960,32879
im_file = "pn-test.fits"im_file1018,34707
xcen_ds9 = 408.61525xcen_ds91021,34763
ycen_ds9 = 439.05376ycen_ds91022,34784
xcen = ds9imcoord2py(ycen_ds9)xcen1026,34878
ycen = ds9imcoord2py(xcen_ds9)ycen1027,34909
expmap_file = "pn-test-exp.fits"expmap_file1030,35038
bgmap_file  = "pn-test-bg-2cp.fits"bgmap_file1031,35071
maskmap_file= "pn-test-mask.fits"maskmap_file1032,35107
xcen_ds9 = 408.61525xcen_ds91041,35338
ycen_ds9 = 439.05376ycen_ds91042,35359
xcen = ds9imcoord2py(ycen_ds9) # need to cross the orderxcen1045,35426
ycen = ds9imcoord2py(xcen_ds9) # need to cross the orderycen1046,35483
r500 = 1.0e3                # r500 [kpc]r5001049,35554
r500_pix = 30              # r500 in im pixelsr500_pix1050,35595
n0 = 7e+0n01052,35643
rc = 10.0                   # ballpark 0.1 r500rc1053,35653
beta = 2.0/3.0beta1054,35701
rs = 27.0                   # ballpark 0.5-1 r500rs1055,35716
alpha = 1.5                 # <3alpha1056,35766
gamma = 3.0                 # fix = 3gamma1057,35799
epsilon = 2.5               # <5epsilon1058,35837
pars_true = lm.Parameters()pars_true1061,35905
model_im_name = 'v06_image_cts.fits'model_im_name1070,36254
expmap_file = "pn-test-exp.fits"expmap_file1079,36478
bgmap_file  = "pn-test-bg-2cp.fits"bgmap_file1080,36511
maskmap_file= "pn-test-mask.fits"maskmap_file1081,36547
pars_true = lm.Parameters()pars_true1090,36805
im_file = '/Users/rs/w/xspt/data/dev/0559/sb/beta_image_src-06.fits'im_file1106,37470
out_file = '/Users/rs/w/xspt/data/dev/0559/sb/beta_image_obs-06.fits'out_file1107,37539
pars_true = lm.Parameters()pars_true1142,38949
im_file = '/Users/rs/w/xspt/data/dev/0559/sb/v06_image_src-03.fits'im_file1153,39332
out_file = '/Users/rs/w/xspt/data/dev/0559/sb/v06_image_obs-03.fits'out_file1154,39400

/Users/rs/data1/sw/esaspi/py/test/test_lmfit.py,1623
import lmfit as lmlm2,25
import timetime4,64
import matplotlib.pylab as pltmatplotlib6,127
import matplotlib.pylab as pltplt6,127
def do_fit():do_fit9,160
def plot_conf(result):plot_conf28,623
def funct(a, b):funct37,821
a_true = 0.1a_true41,898
b_true = 2.0b_true42,911
noise_ampl = 0.1noise_ampl43,924
y = array(( 35.31974891,  27.2502685,   22.14511225,  18.72513472,  16.38344418 ,y44,941
a_true = 0.8a_true81,3421
b_true = 2.0b_true82,3434
noise_ampl = 0.3                # [0.1]noise_ampl83,3447
x=linspace(0.3,10,100)x84,3487
y=funct(a_true, b_true) + noise_ampl*random.randn(x.size)y85,3510
def residual(pars):residual89,3593
pars=lm.Parameters()pars95,3714
pars=lm.Parameters()pars112,4004
FIT_METHOD='leastsq'FIT_METHOD115,4063
leastsq_kws={'xtol': 1.0e-7, 'ftol': 1.0e-7, 'maxfev': 1.0e+7}leastsq_kws116,4084
result = do_fit()result117,4147
sigmas = [0.682689492137, 0.954499736104, 0.997300203937]sigmas121,4216
ci_pars = ['a', 'b']ci_pars122,4274
pars=lm.Parameters()pars138,4627
FIT_METHOD='simplex'FIT_METHOD141,4686
leastsq_kws={'xtol': 1.0e-7, 'ftol': 1.0e-7, 'maxfun': 1.0e+7} # debug set; quickestleastsq_kws142,4707
result_simplex = do_fit()result_simplex144,4793
sigmas = [0.682689492137, 0.954499736104, 0.997300203937]sigmas148,4870
ci_pars = ['a', 'b']ci_pars149,4928
def func(x):func203,7616
x0=0.3x0207,7754
res=newton(func, x0, fprime=None, args=(), tol=1.48e-08, maxiter=1e4, fprime2=None)res208,7761

/Users/rs/data1/sw/esaspi/py/test/test_lmfit_main.py,2659
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import numpy as npnp13,291
def mymodel(x, params):mymodel16,336
def residual(params, x, data=None):residual24,564
params = Parameters()params36,779
true_params = Parameters()true_params37,801
x = np.arange(0.0, 10.0, 0.5)x45,1027
data = mymodel(x, true_params)data46,1057
data = data + random(data.shape)data47,1088
result = minimize(residual, params, args=(x, data))result60,1401
xx = np.arange(0.0, 10.0, 0.05)xx74,1723
fitted_model = mymodel(xx, params)fitted_model75,1755
true_model = mymodel(xx, true_params)true_model76,1790
    color='black',color85,1907
    linestyle='',              # -/--/-./:linestyle86,1926
    linewidth=1,                # linewidth=1linewidth87,1969
    marker='o',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker88,2015
    markerfacecolor='black',markerfacecolor89,2076
    markersize=8,               # markersize=6markersize90,2105
    label=r"data"               # '__nolegend__'label91,2152
    color='red',color95,2235
    linestyle='-',              # -/--/:/-.linestyle96,2252
    linewidth=2,                # linewidth=1linewidth97,2296
    marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker98,2342
    markerfacecolor='black',markerfacecolor99,2402
    markersize=0,               # markersize=6markersize100,2431
    label=r"model"               # '__nolegend__'label101,2478
    color='green',color105,2560
    linestyle='-',              # -/--/:/-.linestyle106,2579
    linewidth=2,                # linewidth=1linewidth107,2623
    marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker108,2669
    markerfacecolor='black',markerfacecolor109,2729
    markersize=0,               # markersize=6markersize110,2758
    label=r"true"               # '__nolegend__'label111,2805
plotPosition="+640+0"          # large_screen="+1100+0"; lap="+640+0"plotPosition119,2928

/Users/rs/data1/sw/esaspi/py/test/test_speed.py,565
a = random.random((20, 22))a3,21
def distance(array, xpos, ypos):distance5,50
dists = distance(a, 10, 11).astype(int)dists14,487
result = bincount(dists.flat, weights=a.flat)result17,558
result = add.accumulate(result)result19,623
xcen_obj = 1.0xcen_obj25,699
ycen_obj = 1.0ycen_obj26,714
im_conv = arange(1, 10, 1, dtype='double').reshape(3,3)im_conv27,729
dists = distance(im_conv, xcen_obj, ycen_obj).astype(int)dists31,861
result_geom = bincount(dists.flat)result_geom32,919
result = bincount(dists.flat, weights=im_conv.flat)result33,954

/Users/rs/data1/sw/esaspi/py/xspec_utils.py,2872
def beta_shape_integral(rho, zeta, beta):beta_shape_integral7,131
def beta_shape_integral_3D(x, beta):beta_shape_integral_3D20,554
def v06mod_shape_integral(rho, zeta, a, beta, gamma, epsilon, rbar):v06mod_shape_integral32,920
def spec_norm_to_density(norm_dat, z, da, rproj1_ang, rproj2_ang, model_name, model_pars):spec_norm_to_density47,1417
def calc_gas_mass(model_name, model_pars, rho0_dat, r1, r2):calc_gas_mass156,5207
    TEST_MODEL_NAME = 'beta'    # beta, v06modTEST_MODEL_NAME234,7307
    h_0=70.2h_0238,7422
    omega_m_0=0.272omega_m_0239,7435
    omega_de_0=0.728omega_de_0240,7455
    omega_k_0=0.0omega_k_0241,7476
    z = 0.468z244,7527
    r500 = 1043.0      # kpcr500245,7541
    rproj1_ang = 0.0     # inner projected radius [arcsec]rproj1_ang247,7571
    rproj2_ang = 60.0    # outer projected radius [arcsec]rproj2_ang248,7630
    pixscale = 2.5       # [arcsec]pixscale249,7689
    norm = 1.45738E-03norm252,7743
    norm_err_n = -4.5767e-05norm_err_n253,7766
    norm_err_p = +4.53208e-05norm_err_p254,7795
    da = dist_ang(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0) # [Mpc]da258,7850
    angscale = arcsec_to_radian * da * 1000.0 # [kpc/arcsec]angscale259,7955
        model_name = TEST_MODEL_NAMEmodel_name264,8167
        rcore = 10.0 * 2.5                # [pix]rcore267,8250
        beta  = 2.0/3.0beta268,8300
        model_pars = (rcore, beta)model_pars269,8324
        rcore_phy = rcore * pixscale * arcsec_to_radian * da * 1000.0 # [kpc]rcore_phy272,8406
        model_pars_phy = (rcore_phy, beta)model_pars_phy273,8484
        model_name = TEST_MODEL_NAMEmodel_name276,8566
        rc = 20.0                   # ballpark 0.1 r500, [pix]rc278,8604
        beta = 2.0/3.0beta279,8667
        rs = 20.0                   # ballpark 0.5-1 r500, [pix]rs280,8690
        alpha = 1.5                 # <3alpha281,8755
        gamma = 3.0                 # fix = 3gamma282,8796
        epsilon = 2.0               # <5epsilon283,8842
        model_pars = (alpha, beta, gamma, epsilon, rc, rs)model_pars285,8884
        rc_phy = rc * pixscale * arcsec_to_radian * da * 1000.0 # [kpc]rc_phy288,8990
        rs_phy = rc * pixscale * arcsec_to_radian * da * 1000.0 # [kpc]rs_phy289,9062
        model_pars_phy = (alpha, beta, gamma, epsilon, rc_phy, rs_phy)model_pars_phy290,9134
    rho0_dat = spec_norm_to_density(norm, z, da, rproj1_ang, rproj2_ang, model_name, model_pars)rho0_dat295,9324
    ne0 = rho0 / (mu_e_feldman92 * mp_cgs)ne0296,9421
    r1 = 0.0                    # [kpc]r1300,9567
    r2 = r500                   # [kpc]r2301,9607
    mgas_dat = calc_gas_mass(model_name, model_pars_phy, rho0_dat, r1, r2)mgas_dat303,9648

/Users/rs/data1/sw/esaspi/radial-spec/plt_radial_t.py,1641
import syssys2,22
import osos3,33
import mathmath4,43
import matplotlib.pyplot as pltmatplotlib7,96
import matplotlib.pyplot as pltplt7,96
import matplotlib.font_managermatplotlib8,128
import matplotlib.font_managerfont_manager8,128
def plot_r_t(r, t, t_err_p, t_err_n, figname):plot_r_t12,239
    intab = sys.argv[1]intab72,2737
    figname = intab+'.png'figname76,2853
    dat=loadtxt(intab, dtype='string', comments='#', delimiter=None, converters=None,dat78,2881
                usecols=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)usecols80,3009
    fitid = double(dat[:,0])fitid83,3103
    iter = double(dat[:,1])iter84,3132
    r_fit = double(dat[:,2])r_fit85,3160
    norm = double(dat[:,3])norm86,3189
    norm_err_n = -1.0*double(dat[:,4])norm_err_n87,3217
    norm_err_p = double(dat[:,5])norm_err_p88,3256
    t_fit = double(dat[:,6])t_fit89,3290
    t_fit_err_n = -1.0*double(dat[:,7])t_fit_err_n90,3319
    t_fit_err_p = double(dat[:,8])t_fit_err_p91,3359
    z = double(dat[:,9])z92,3394
    z_err_n = -1.0*double(dat[:,10])z_err_n93,3419
    z_err_p = double(dat[:,11])z_err_p94,3456
    abund = double(dat[:,12])abund95,3488
    abund_err_n = -1.0*double(dat[:,13])abund_err_n96,3518
    abund_err_p = double(dat[:,14])abund_err_p97,3559

/Users/rs/data1/sw/esaspi/sb/extract-sb-prof.py,14891
import pyfitspyfits2,21
        im_file   = argv[1]im_file16,375
        exp_file  = argv[2]exp_file17,403
        bg_file   = argv[3]bg_file18,431
        mask_file = argv[4]mask_file19,459
        xim = double(argv[5]) - 1.0     # center x coordxim21,488
        yim = double(argv[6]) - 1.0     # center y coordyim22,545
        rmin = double(argv[7])          # [pix] minimal extraction aperturermin24,603
        rmax = double(argv[8])          # [pix] maximal extraction aperturermax25,679
        binning = argv[9]                # binning schemebinning26,755
        outfile = argv[10]outfile27,813
        f = open(outfile, 'w')f33,1011
        g = open(outfile+'.cumul', 'w')g54,2259
        fname = im_filefname74,3664
        hdu = pyfits.open(fname)hdu75,3688
        im_raw = hdu[0].dataim_raw76,3721
        fname = exp_filefname78,3751
        hdu = pyfits.open(fname)hdu79,3776
        exp_raw = hdu[0].dataexp_raw80,3809
        fname = bg_filefname82,3840
        hdu = pyfits.open(fname)hdu83,3864
        bg_raw = hdu[0].databg_raw84,3897
        fname = mask_filefname86,3927
        hdu = pyfits.open(fname)hdu87,3953
        mask = double(hdu[1].data)mask88,3986
        hdr = hdu[1].header     # get a header for testing purposeshdr89,4021
            exp_raw = trim_fftconvolve(exp_raw)exp_raw98,4355
            bg_raw = trim_fftconvolve(bg_raw)bg_raw100,4452
            mask = trim_fftconvolve(mask)mask102,4545
        im  = im_raw  * maskim104,4588
        bg  = bg_raw  * maskbg105,4617
        exp = exp_raw * maskexp106,4646
        mask_raw = exp_raw.copy()mask_raw111,4796
        mask_raw = (mask_raw>0.0).choose(mask_raw, 1.0)mask_raw112,4830
        distmatrix = sqdist_matrix(im, xim, yim)distmatrix119,5056
        hdu = pyfits.PrimaryHDU(distmatrix, hdr)hdu121,5106
        hdulist = pyfits.HDUList([hdu])hdulist122,5155
        cumul_cts_tot_wps     = 0.0cumul_cts_tot_wps130,5411
        cumul_cts_bg_wps      = 0.0cumul_cts_bg_wps131,5447
        cumul_cts_src_wps     = 0.0cumul_cts_src_wps132,5483
        cumul_cts_tot         = 0.0cumul_cts_tot133,5519
        cumul_cts_bg          = 0.0cumul_cts_bg134,5555
        cumul_cts_src         = 0.0cumul_cts_src135,5591
        cumul_ctr_tot_wps     = 0.0cumul_ctr_tot_wps136,5627
        cumul_ctr_bg_wps      = 0.0cumul_ctr_bg_wps137,5663
        cumul_ctr_src_wps     = 0.0cumul_ctr_src_wps138,5699
        cumul_ctr_tot         = 0.0cumul_ctr_tot139,5735
        cumul_ctr_bg          = 0.0cumul_ctr_bg140,5771
        cumul_ctr_src         = 0.0cumul_ctr_src141,5807
        cumul_sb_tot_wps      = 0.0cumul_sb_tot_wps142,5843
        cumul_sb_bg_wps       = 0.0cumul_sb_bg_wps143,5879
        cumul_sb_src_wps      = 0.0cumul_sb_src_wps144,5915
        cumul_sb_tot          = 0.0cumul_sb_tot145,5951
        cumul_sb_bg           = 0.0cumul_sb_bg146,5987
        cumul_sb_src          = 0.0cumul_sb_src147,6023
        cumul_cts_tot_wps_err = 0.0cumul_cts_tot_wps_err149,6060
        cumul_cts_bg_wps_err  = 0.0cumul_cts_bg_wps_err150,6096
        cumul_cts_src_wps_err = 0.0cumul_cts_src_wps_err151,6132
        cumul_cts_tot_err     = 0.0cumul_cts_tot_err152,6168
        cumul_cts_bg_err      = 0.0cumul_cts_bg_err153,6204
        cumul_cts_src_err     = 0.0cumul_cts_src_err154,6240
        cumul_ctr_tot_wps_err = 0.0cumul_ctr_tot_wps_err155,6276
        cumul_ctr_bg_wps_err  = 0.0cumul_ctr_bg_wps_err156,6312
        cumul_ctr_src_wps_err = 0.0cumul_ctr_src_wps_err157,6348
        cumul_ctr_tot_err     = 0.0cumul_ctr_tot_err158,6384
        cumul_ctr_bg_err      = 0.0cumul_ctr_bg_err159,6420
        cumul_ctr_src_err     = 0.0cumul_ctr_src_err160,6456
        cumul_sb_tot_wps_err  = 0.0cumul_sb_tot_wps_err161,6492
        cumul_sb_bg_wps_err   = 0.0cumul_sb_bg_wps_err162,6528
        cumul_sb_src_wps_err  = 0.0cumul_sb_src_wps_err163,6564
        cumul_sb_tot_err      = 0.0cumul_sb_tot_err164,6600
        cumul_sb_bg_err       = 0.0cumul_sb_bg_err165,6636
        cumul_sb_src_err      = 0.0cumul_sb_src_err166,6672
        cts_tot_wps     = 0.0cts_tot_wps168,6709
        cts_bg_wps      = 0.0cts_bg_wps169,6739
        cts_src_wps     = 0.0cts_src_wps170,6769
        cts_tot         = 0.0cts_tot171,6799
        cts_bg          = 0.0cts_bg172,6829
        cts_src         = 0.0cts_src173,6859
        ctr_tot_wps     = 0.0ctr_tot_wps174,6889
        ctr_bg_wps      = 0.0ctr_bg_wps175,6919
        ctr_src_wps     = 0.0ctr_src_wps176,6949
        ctr_tot         = 0.0ctr_tot177,6979
        ctr_bg          = 0.0ctr_bg178,7009
        ctr_src         = 0.0ctr_src179,7039
        sb_tot_wps      = 0.0sb_tot_wps180,7069
        sb_bg_wps       = 0.0sb_bg_wps181,7099
        sb_src_wps      = 0.0sb_src_wps182,7129
        sb_tot          = 0.0sb_tot183,7159
        sb_bg           = 0.0sb_bg184,7189
        sb_src          = 0.0sb_src185,7219
        cts_tot_wps_err = 0.0cts_tot_wps_err187,7250
        cts_bg_wps_err  = 0.0cts_bg_wps_err188,7280
        cts_src_wps_err = 0.0cts_src_wps_err189,7310
        cts_tot_err     = 0.0cts_tot_err190,7340
        cts_bg_err      = 0.0cts_bg_err191,7370
        cts_src_err     = 0.0cts_src_err192,7400
        ctr_tot_wps_err = 0.0ctr_tot_wps_err193,7430
        ctr_bg_wps_err  = 0.0ctr_bg_wps_err194,7460
        ctr_src_wps_err = 0.0ctr_src_wps_err195,7490
        ctr_tot_err     = 0.0ctr_tot_err196,7520
        ctr_bg_err      = 0.0ctr_bg_err197,7550
        ctr_src_err     = 0.0ctr_src_err198,7580
        sb_tot_wps_err  = 0.0sb_tot_wps_err199,7610
        sb_bg_wps_err   = 0.0sb_bg_wps_err200,7640
        sb_src_wps_err  = 0.0sb_src_wps_err201,7670
        sb_tot_err      = 0.0sb_tot_err202,7700
        sb_bg_err       = 0.0sb_bg_err203,7730
        sb_src_err      = 0.0sb_src_err204,7760
            r = optibingrid(binnum=20, rmax=rmax, c=1.5)r215,8123
            r = append(rmin, r[r>rmin+1])r219,8284
            r = arange(rmin, rmax+1.0, double(binning))r234,8967
            ids = where((distmatrix < r[i+1]**2.0) & (distmatrix >= (r[i])**2.0))ids239,9101
            geometric_area = len(ids[0])      # [pix], total number of pixgeometric_area240,9183
            mask_area_wps = sum(mask_raw[ids])mask_area_wps246,9446
            area_correction_wps = 1.0 + (1.0 - mask_area_wps/geometric_area)area_correction_wps247,9493
            cts_tot_wps   = sum(im_raw[ids])  * area_correction_wpscts_tot_wps249,9571
            cts_bg_wps    = sum(bg_raw[ids])  * area_correction_wpscts_bg_wps250,9639
            exp_time_wps  = sum(exp_raw[ids]) * area_correction_wpsexp_time_wps251,9707
            cts_src_wps = cts_tot_wps - cts_bg_wpscts_src_wps253,9776
            mask_area = sum(mask[ids])mask_area259,10014
            area_correction = 1.0 + (1.0 - mask_area/geometric_area)area_correction260,10053
            cts_tot   = sum(im_raw[ids])  * area_correctioncts_tot262,10123
            cts_bg    = sum(bg_raw[ids])  * area_correctioncts_bg263,10183
            exp_time  = sum(exp_raw[ids]) * area_correctionexp_time264,10243
            cts_src = cts_tot - cts_bgcts_src266,10304
                ctr_tot_wps     = cts_tot_wps/exp_time_wpsctr_tot_wps276,10673
                ctr_bg_wps      = cts_bg_wps/exp_time_wpsctr_bg_wps277,10732
                ctr_src_wps     = cts_src_wps/exp_time_wpsctr_src_wps278,10790
                sb_tot_wps      = ctr_tot_wps/mask_area_wpssb_tot_wps280,10850
                sb_bg_wps       = ctr_bg_wps/mask_area_wpssb_bg_wps281,10910
                sb_src_wps      = ctr_src_wps/mask_area_wpssb_src_wps282,10969
                cts_tot_wps_err = sqrt(cts_tot)cts_tot_wps_err285,11063
                cts_bg_wps_err  = sqrt(cts_bg)cts_bg_wps_err286,11111
                cts_src_wps_err = sqrt(cts_tot_wps_err**2.0 + cts_bg_wps_err**2.0)cts_src_wps_err287,11158
                ctr_tot_wps_err = cts_tot_wps_err/exp_time_wpsctr_tot_wps_err289,11242
                ctr_bg_wps_err  = cts_bg_wps_err/exp_time_wpsctr_bg_wps_err290,11305
                ctr_src_wps_err = sqrt(ctr_tot_wps_err**2.0 + ctr_bg_wps_err**2.0)ctr_src_wps_err291,11367
                sb_tot_wps_err  = ctr_tot_wps_err/mask_area_wpssb_tot_wps_err293,11451
                sb_bg_wps_err   = ctr_bg_wps_err/mask_area_wpssb_bg_wps_err294,11515
                sb_src_wps_err  = ctr_src_wps_err/mask_area_wpssb_src_wps_err295,11578
                ctr_tot_wps     = 0.0ctr_tot_wps301,11780
                ctr_bg_wps      = 0.0ctr_bg_wps302,11818
                ctr_src_wps     = 0.0ctr_src_wps303,11856
                sb_tot_wps      = 0.0sb_tot_wps304,11894
                sb_bg_wps       = 0.0sb_bg_wps305,11932
                sb_src_wps      = 0.0sb_src_wps306,11970
                ctr_tot_wps_err = -1.0ctr_tot_wps_err307,12008
                ctr_bg_wps_err  = -1.0ctr_bg_wps_err308,12047
                ctr_src_wps_err = -1.0ctr_src_wps_err309,12086
                sb_tot_wps_err  = -1.0sb_tot_wps_err310,12125
                sb_bg_wps_err   = -1.0sb_bg_wps_err311,12164
                sb_src_wps_err  = -1.0sb_src_wps_err312,12203
                ctr_tot         = cts_tot/exp_timectr_tot317,12351
                ctr_bg          = cts_bg/exp_timectr_bg318,12402
                ctr_src         = cts_src/exp_timectr_src319,12452
                sb_tot          = ctr_tot/mask_areasb_tot321,12504
                sb_bg           = ctr_bg/mask_areasb_bg322,12556
                sb_src          = ctr_src/mask_areasb_src323,12607
                cts_tot_err = sqrt(cts_tot)cts_tot_err326,12693
                cts_bg_err  = sqrt(cts_bg)cts_bg_err327,12737
                cts_src_err = sqrt(cts_tot_err**2.0 + cts_bg_err**2.0)cts_src_err328,12780
                ctr_tot_err = cts_tot_err/exp_timectr_tot_err330,12852
                ctr_bg_err  = cts_bg_err/exp_timectr_bg_err331,12903
                ctr_src_err = sqrt(ctr_tot_err**2.0 + ctr_bg_err**2.0)ctr_src_err332,12953
                sb_tot_err  = ctr_tot_err/mask_areasb_tot_err334,13025
                sb_bg_err   = ctr_bg_err/mask_areasb_bg_err335,13077
                sb_src_err  = ctr_src_err/mask_areasb_src_err336,13128
                ctr_tot         = 0.0ctr_tot342,13318
                ctr_bg          = 0.0ctr_bg343,13356
                ctr_src         = 0.0ctr_src344,13394
                sb_tot          = 0.0sb_tot345,13432
                sb_bg           = 0.0sb_bg346,13470
                sb_src          = 0.0sb_src347,13508
                ctr_tot_err     = -1.0ctr_tot_err348,13546
                ctr_bg_err      = -1.0ctr_bg_err349,13585
                ctr_src_err     = -1.0ctr_src_err350,13624
                sb_tot_err      = -1.0sb_tot_err351,13663
                sb_bg_err       = -1.0sb_bg_err352,13702
                sb_src_err      = -1.0sb_src_err353,13741
            cumul_cts_tot_wps     = cumul_cts_tot_wps + cts_tot_wpscumul_cts_tot_wps358,13897
            cumul_cts_bg_wps      = cumul_cts_bg_wps + cts_bg_wpscumul_cts_bg_wps359,13965
            cumul_cts_src_wps     = cumul_cts_src_wps + cts_src_wpscumul_cts_src_wps360,14031
            cumul_cts_tot         = cumul_cts_tot + cts_totcumul_cts_tot361,14099
            cumul_cts_bg          = cumul_cts_bg + cts_bgcumul_cts_bg362,14159
            cumul_cts_src         = cumul_cts_src + cts_srccumul_cts_src363,14217
            cumul_ctr_tot_wps     = cumul_ctr_tot_wps + ctr_tot_wpscumul_ctr_tot_wps364,14277
            cumul_ctr_bg_wps      = cumul_ctr_bg_wps + ctr_bg_wpscumul_ctr_bg_wps365,14345
            cumul_ctr_src_wps     = cumul_ctr_src_wps + ctr_src_wpscumul_ctr_src_wps366,14411
            cumul_ctr_tot         = cumul_ctr_tot + ctr_totcumul_ctr_tot367,14479
            cumul_ctr_bg          = cumul_ctr_bg + ctr_bgcumul_ctr_bg368,14539
            cumul_ctr_src         = cumul_ctr_src + ctr_srccumul_ctr_src369,14597
            cumul_sb_tot_wps      = cumul_sb_tot_wps + sb_tot_wpscumul_sb_tot_wps370,14657
            cumul_sb_bg_wps       = cumul_sb_bg_wps + sb_bg_wpscumul_sb_bg_wps371,14723
            cumul_sb_src_wps      = cumul_sb_src_wps + sb_src_wpscumul_sb_src_wps372,14787
            cumul_sb_tot          = cumul_sb_tot + sb_totcumul_sb_tot373,14853
            cumul_sb_bg           = cumul_sb_bg + sb_bgcumul_sb_bg374,14911
            cumul_sb_src          = cumul_sb_src + sb_srccumul_sb_src375,14967
            cumul_cts_tot_wps_err = (cumul_cts_tot_wps_err**2 + cts_tot_wps_err**2)**0.5cumul_cts_tot_wps_err378,15082
            cumul_cts_bg_wps_err  = (cumul_cts_bg_wps_err**2 + cts_bg_wps_err**2)**0.5cumul_cts_bg_wps_err379,15171
            cumul_cts_src_wps_err = (cumul_cts_src_wps_err**2 + cts_src_wps_err**2)**0.5cumul_cts_src_wps_err380,15258
            cumul_cts_tot_err     = (cumul_cts_tot_err**2 + cts_tot_err**2)**0.5cumul_cts_tot_err381,15347
            cumul_cts_bg_err      = (cumul_cts_bg_err**2 + cts_bg_err**2)**0.5cumul_cts_bg_err382,15428
            cumul_cts_src_err     = (cumul_cts_src_err**2 + cts_src_err**2)**0.5cumul_cts_src_err383,15507
            cumul_ctr_tot_wps_err = (cumul_ctr_tot_wps_err**2 + ctr_tot_wps_err**2)**0.5cumul_ctr_tot_wps_err384,15588
            cumul_ctr_bg_wps_err  = (cumul_ctr_bg_wps_err**2 + ctr_bg_wps_err**2)**0.5cumul_ctr_bg_wps_err385,15677
            cumul_ctr_src_wps_err = (cumul_ctr_src_wps_err**2 + ctr_src_wps_err**2)**0.5cumul_ctr_src_wps_err386,15764
            cumul_ctr_tot_err     = (cumul_ctr_tot_err**2 + ctr_tot_err**2)**0.5cumul_ctr_tot_err387,15853
            cumul_ctr_bg_err      = (cumul_ctr_bg_err**2 + ctr_bg_err**2)**0.5cumul_ctr_bg_err388,15934
            cumul_ctr_src_err     = (cumul_ctr_src_err**2 + ctr_src_err**2)**0.5cumul_ctr_src_err389,16013
            cumul_sb_tot_wps_err  = (cumul_sb_tot_wps_err**2 + sb_tot_wps_err**2)**0.5cumul_sb_tot_wps_err390,16094
            cumul_sb_bg_wps_err   = (cumul_sb_bg_wps_err**2 + sb_bg_wps_err**2)**0.5cumul_sb_bg_wps_err391,16181
            cumul_sb_src_wps_err  = (cumul_sb_src_wps_err**2 + sb_src_wps_err**2)**0.5cumul_sb_src_wps_err392,16266
            cumul_sb_tot_err      = (cumul_sb_tot_err**2 + sb_tot_err**2)**0.5cumul_sb_tot_err393,16353
            cumul_sb_bg_err       = (cumul_sb_bg_err**2 + sb_bg_err**2)**0.5cumul_sb_bg_err394,16432
            cumul_sb_src_err      = (cumul_sb_src_err**2 + sb_src_err**2)**0.5cumul_sb_src_err395,16509

/Users/rs/data1/sw/esaspi/sb/fit_sb_model_instrument.py,1890
import syssys1,0
import osos2,11
import mathmath3,21
import matplotlib.pyplot as pltmatplotlib6,74
import matplotlib.pyplot as pltplt6,74
import matplotlib.font_managermatplotlib7,106
import matplotlib.font_managerfont_manager7,106
import asciitable as atabatab11,353
    fname=sys.argv[1]fname21,560
    fitid=sys.argv[2]fitid22,582
    r500_pix=double(sys.argv[3])r500_pix23,604
    instrument=sys.argv[4]instrument24,637
    theta=double(sys.argv[5]) / 60.0theta25,664
    energy=double(sys.argv[6])energy26,701
    MODEL=sys.argv[7]MODEL27,732
    MAKE_CONTROL_PLOT=sys.argv[8]MAKE_CONTROL_PLOT28,754
    ids = where(r<=r500_pix)ids74,2222
    r = r[ids]r76,2252
    sb_src = sb_src[ids]sb_src77,2267
    sb_bg = sb_bg[ids]sb_bg78,2292
    sb_src_err = sb_src_err[ids]sb_src_err79,2315
    sb_bg_err = sb_bg_err[ids]sb_bg_err80,2348
    n = len(r)n81,2379
        outfig = fname+'.'+fitid+'.png'outfig87,2524
    outpickle = fname+'.'+fitid+'.pk'outpickle96,2778

/Users/rs/data1/sw/esaspi/sb/fit_sb_model_joint.py,2762
import syssys1,0
import osos2,11
import mathmath3,21
import matplotlib.pyplot as pltmatplotlib6,74
import matplotlib.pyplot as pltplt6,74
import matplotlib.font_managermatplotlib7,106
import matplotlib.font_managerfont_manager7,106
import lmfit as lmlm13,464
import timetime14,483
import asciitable as atabatab15,495
import picklepickle16,521
fitid              = sys.argv[1]fitid21,585
MODEL              = sys.argv[2]MODEL22,618
MAKE_CONTROL_PLOT  = sys.argv[3]MAKE_CONTROL_PLOT23,651
rsbfit             = double(sys.argv[4])rsbfit24,684
rsbexc             = double(sys.argv[5])rsbexc25,725
energy             = double(sys.argv[6])energy26,766
prof_fname_pn      = sys.argv[7]prof_fname_pn27,807
theta_pn           = double(sys.argv[8]) / 60.0theta_pn28,840
prof_fname_mos1    = sys.argv[9]prof_fname_mos129,888
theta_mos1         = double(sys.argv[10]) / 60.0theta_mos130,921
prof_fname_mos2    = sys.argv[11]prof_fname_mos231,970
theta_mos2         = double(sys.argv[12]) / 60.0theta_mos232,1004
INSTRUMENT_SETUP   = sys.argv[13]INSTRUMENT_SETUP33,1053
instruments        = sys.argv[14].split()instruments34,1087
sb_file = {sb_file60,1960
theta = {theta66,2066
sb_src = {}sb_src73,2181
sb_bg = {}sb_bg74,2193
sb_src_err = {}sb_src_err75,2204
sb_bg_err = {}sb_bg_err76,2220
    r = append(rsbexc, r)r95,2802
    n = len(r)n111,3406
        outfig = sb_file[instrument]+'.'+fitid+'.png'outfig115,3490
outpickle = sb_file[instruments[0]]+'.'+fitid+'.pk'outpickle126,3899
outpickle = outpickle.replace(instruments[0], 'joint')outpickle127,3951

/Users/rs/data1/sw/esaspi/sb/get_cts_stat_aper.py,1325
import syssys1,0
import pyfitspyfits2,11
        imname = sys.argv[1]imname19,459
        xim = double(sys.argv[2]) - 1.0xim20,488
        yim = double(sys.argv[3]) - 1.0yim21,528
        r_aper = double(sys.argv[4])**2                            # sqare for speedupr_aper22,568
        fname = imnamefname27,759
        hdu = pyfits.open(fname)hdu28,782
        im = hdu[0].dataim29,815
        distmatrix = sqdist_matrix(im, xim, yim)distmatrix31,841
        answer = get_cts_stat(im, distmatrix, xim, yim, r_aper)answer33,891
            cts = answer[0]cts61,2131
            bgname = sys.argv[5]bgname62,2159
            fname = bgnamefname63,2192
            hdu = pyfits.open(fname)hdu64,2219
            bg = hdu[0].databg65,2256
            bgcts = get_cts_stat(bg, distmatrix, xim, yim, r_aper)[0]bgcts66,2285
            mask = bg / bgmask68,2356
            ids = where(isnan(mask)==True)ids70,2384
            maskcts=get_cts_stat(mask, distmatrix, xim, yim, r_aper)[0]maskcts75,2553
            areamask = mask + 1.0areamask77,2626
            areamask = areamask / areamaskareamask78,2660
            areamaskcts = get_cts_stat(areamask, distmatrix, xim, yim, r_aper)[0]areamaskcts79,2703
            correction=1.0 + (1.0 - maskcts/areamaskcts)correction81,2786

/Users/rs/data1/sw/esaspi/sb/get_cts_stat_aper_annul.py,1505
import syssys1,0
import pyfitspyfits2,11
        imname = sys.argv[1]imname19,479
        xim = double(sys.argv[2]) - 1.0 # convert to ds9xim20,508
        yim = double(sys.argv[3]) - 1.0 # convert to ds9yim21,565
        r_min = double(sys.argv[4])**2                            # sqare for speedupr_min22,622
        r_max = double(sys.argv[5])**2                            # sqare for speedupr_max23,708
        fname = imnamefname28,898
        hdu = pyfits.open(fname)hdu29,921
        im = hdu[0].dataim30,954
        distmatrix = sqdist_matrix(im, xim, yim)distmatrix32,980
        answer = get_cts_stat_annul(im, distmatrix, xim, yim, r_min, r_max)answer34,1030
            cts = answer[0]cts63,2337
            bgname = sys.argv[6]bgname64,2365
            fname = bgnamefname65,2398
            hdu = pyfits.open(fname)hdu66,2425
            bg = hdu[0].databg67,2462
            bgcts = get_cts_stat_annul(bg, distmatrix, xim, yim, r_min, r_max)[0]bgcts68,2491
            mask = bg / bgmask70,2574
            ids = where(isnan(mask)==True)ids72,2602
            maskcts=get_cts_stat_annul(mask, distmatrix, xim, yim, r_min, r_max)[0]maskcts77,2771
            areamask = mask + 1.0areamask79,2856
            areamask = areamask / areamaskareamask80,2890
            areamaskcts = get_cts_stat_annul(areamask, distmatrix, xim, yim, r_min, r_max)[0]areamaskcts81,2933
            correction=1.0 + (1.0 - maskcts/areamaskcts)correction83,3028

/Users/rs/data1/sw/esaspi/sb/plt_cumul_sb.py,1149
import syssys1,0
import mathmath2,11
import matplotlib.pyplot as pltmatplotlib5,64
import matplotlib.pyplot as pltplt5,64
import matplotlib.font_managermatplotlib6,96
import matplotlib.font_managerfont_manager6,96
fname = sys.argv[1]fname14,411
dat=loadtxt(fname, dtype='string', comments='#', delimiter=None, converters=None,dat16,432
            usecols=(0,1,2,4,5)usecols18,552
r = double(dat[:,0])r21,599
cumul_sb_src = double(dat[:,1])cumul_sb_src22,620
cumul_sb_bg = double(dat[:,2])cumul_sb_bg23,652
cumul_sb_src_err = double(dat[:,3])cumul_sb_src_err24,683
cumul_sb_bg_err = double(dat[:,4])cumul_sb_bg_err25,719

/Users/rs/data1/sw/esaspi/sb/sb-prof-fitter.py,5227
import mathmath2,21
import matplotlib.pyplot as pltmatplotlib5,74
import matplotlib.pyplot as pltplt5,74
import matplotlib.font_managermatplotlib6,106
import matplotlib.font_managerfont_manager6,106
import sb_plotting_utilssb_plotting_utils12,372
    pixscale = 4.0               # [arcsec/pix]pixscale23,560
    intab = argv[1]intab28,704
    dat=loadtxt(intab, dtype='string', comments='#', delimiter=None, converters=None,dat29,724
    r = double(dat[:,0])r34,903
    sb_src = double(dat[:,1])sb_src35,928
    sb_bg = double(dat[:,2])sb_bg36,958
    sb_tot = double(dat[:,3])sb_tot37,987
    sb_src_err = double(dat[:,4])sb_src_err38,1017
    sb_bg_err = double(dat[:,5])sb_bg_err39,1051
    sb_tot_err = double(dat[:,6])sb_tot_err40,1084
    ctr_src = double(dat[:,7])ctr_src41,1118
    ctr_bg = double(dat[:,8])ctr_bg42,1149
    ctr_tot = double(dat[:,9])ctr_tot43,1179
    ctr_src_err = double(dat[:,10])ctr_src_err44,1210
    ctr_bg_err = double(dat[:,11])ctr_bg_err45,1246
    ctr_tot_err = double(dat[:,12])ctr_tot_err46,1281
    cts_src = double(dat[:,13])cts_src47,1317
    cts_bg = double(dat[:,14])cts_bg48,1349
    cts_tot = double(dat[:,15])cts_tot49,1380
    cts_src_err = double(dat[:,16])cts_src_err50,1412
    cts_bg_err = double(dat[:,17])cts_bg_err51,1448
    cts_tot_err = double(dat[:,18])cts_tot_err52,1483
    exp_time = double(dat[:,19])exp_time53,1519
    area_correction = double(dat[:,20])area_correction54,1552
    mask_area = double(dat[:,21])mask_area55,1592
    geometric_area = double(dat[:,22])geometric_area56,1626
    sb_src_wps = double(dat[:,23])sb_src_wps57,1665
    sb_bg_wps = double(dat[:,24])sb_bg_wps58,1700
    sb_tot_wps = double(dat[:,25])sb_tot_wps59,1734
    sb_src_wps_err = double(dat[:,26])sb_src_wps_err60,1769
    sb_bg_wps_err = double(dat[:,27])sb_bg_wps_err61,1808
    sb_tot_wps_err = double(dat[:,28])sb_tot_wps_err62,1846
    ctr_src_wps = double(dat[:,29])ctr_src_wps63,1885
    ctr_bg_wps = double(dat[:,30])ctr_bg_wps64,1921
    ctr_tot_wps = double(dat[:,31])ctr_tot_wps65,1956
    ctr_src_wps_err = double(dat[:,32])ctr_src_wps_err66,1992
    ctr_bg_wps_err = double(dat[:,33])ctr_bg_wps_err67,2032
    ctr_tot_wps_err = double(dat[:,34])ctr_tot_wps_err68,2071
    cts_src_wps = double(dat[:,35])cts_src_wps69,2111
    cts_bg_wps = double(dat[:,36])cts_bg_wps70,2147
    cts_tot_wps = double(dat[:,37])cts_tot_wps71,2182
    cts_src_wps_err = double(dat[:,38])cts_src_wps_err72,2218
    cts_bg_wps_err = double(dat[:,39])cts_bg_wps_err73,2258
    cts_tot_wps_err = double(dat[:,40])cts_tot_wps_err74,2297
    exp_time_wps = double(dat[:,41])exp_time_wps75,2337
    area_correction_wps = double(dat[:,42])area_correction_wps76,2374
    mask_area_wps = double(dat[:,43])mask_area_wps77,2418
    r = r * pixscale                 # [acsec]r82,2554
    fname = intab+'.ctr.png'fname87,2697
    p0 = [5.0e-5, 10.0, 2.0/3.0]p094,2981
    rgrid = linspace(0.0, 100.0, 100)rgrid95,3014
    data = arrays2minuit(r, sb_src, sb_src_err)data100,3146
    def minuit_beta_model(r, norm, rcore, beta):minuit_beta_model102,3195
    def minuit_beta_model_likelihood(norm, rcore, beta):minuit_beta_model_likelihood116,3555
    norm0  = median(sb_src)norm0137,4163
    rcore0 = 18.0               # [arcsec]rcore0138,4191
    beta0  = 2.0/3.0beta0139,4234
    limit_norm  = (sb_src.min(), sb_src.max())limit_norm141,4256
    limit_rcore = (pixscale, r.max())limit_rcore142,4303
    limit_beta  = (0.35, 3.0)         # (0.35, 3.0) - generous boundslimit_beta143,4341
    model_fit =  minuit.Minuit(minuit_beta_model_likelihood,model_fit151,4629
                               limit_norm=limit_norm,limit_norm153,4759
                               limit_rcore=limit_rcore,limit_rcore154,4813
                               limit_beta=limit_beta,limit_beta155,4869
                               fix_norm=False,fix_norm156,4923
                               fix_rcore=False,fix_rcore157,4970
                               fix_beta=Falsefix_beta158,5018
    par_fitted = [model_fit.values["norm"], model_fit.values["rcore"], model_fit.values["beta"]]par_fitted169,5445
    errors_fitted = model_fit.errorserrors_fitted170,5542
    ell_points = 500            # num. of samples for the surfaceell_points176,5679
    fname = intab+'.err-ellipse.png'fname177,5745
    ell1 = sort(array(model_fit.contour("beta", "rcore", 1, ell_points)))ell1179,5783
    ell2 = sort(array(model_fit.contour("beta", "rcore", 2, 2*ell_points)))ell2180,5857
    ell3 = sort(array(model_fit.contour("beta", "rcore", 3, 3*ell_points)))ell3181,5933
    fname = intab+'.fit.png'fname189,6198

/Users/rs/data1/sw/esaspi/sb/sb_fitting_utils.py,2406
import syssys1,0
import osos2,11
import mathmath3,21
import matplotlib.pyplot as pltmatplotlib6,74
import matplotlib.pyplot as pltplt6,74
import matplotlib.font_managermatplotlib7,106
import matplotlib.font_managerfont_manager7,106
import lmfit as lmlm13,445
import timetime14,464
import asciitable as atabatab15,476
import picklepickle16,502
def load_sb_curve(fname):load_sb_curve19,518
def print_fit_diagnostics(result, delta_t=-1.0, ndata=None, leastsq_kws=None):print_fit_diagnostics49,1384
def sanitize_sb_curve(sb_curve_tuple):sanitize_sb_curve109,3139
def fit_beta_model(r, sb_src, sb_src_err, instrument, theta, energy, results_pickle=None):fit_beta_model138,3778
def fit_beta_model_joint(r, sb_src, sb_src_err, instruments, theta, energy, results_pickle=None):fit_beta_model_joint278,9194
def fit_v06_model_joint(r, sb_src, sb_src_err, instruments, theta, energy, results_pickle=None):fit_v06_model_joint508,17935
def fit_v06_model(r, sb_src, sb_src_err, instrument, theta, energy, results_pickle=None):fit_v06_model742,26203

/Users/rs/data1/sw/esaspi/sb/sb_plotting_utils.py,2469
import syssys1,0
import osos2,11
import mathmath3,21
import pyfitspyfits4,33
import matplotlib.pyplot as pltmatplotlib7,88
import matplotlib.pyplot as pltplt7,88
import matplotlib.font_managermatplotlib8,120
import matplotlib.font_managerfont_manager8,120
def plot_cts_profile(r, c1, c2, fname):plot_cts_profile12,266
def plot_sb_profile(r, c1, c1_err, c2, c2_err, fname):plot_sb_profile99,3673
def plot_sb_fit(r, c1, c1_err, beta_pars, fname):plot_sb_fit190,7464
def plot_minuit_err_ellipse(c1, c2, c3, fname):plot_minuit_err_ellipse282,11096
def plot_king_model_psf(energy, theta, instrument):plot_king_model_psf423,17025
def plot_data_model_simple(r_data, profile_data,plot_data_model_simple536,21478
def plot_data_model_resid(r_data, profile_data,plot_data_model_resid621,24370
def plt_like_surface(x, y, likelihood, output_figure, xlabel, ylabel):plt_like_surface747,28965
    print "This is a library! Use import sb_plotting_utils in your script to call the subrutines"sb_plotting_utils798,30732
    print "This is a library! Use import sb_plotting_utils in your script to call the subrutines"in798,30732
    print "This is a library! Use import sb_plotting_utils in your script to call the subrutines"your798,30732
    print "This is a library! Use import sb_plotting_utils in your script to call the subrutines"script798,30732
    print "This is a library! Use import sb_plotting_utils in your script to call the subrutines"to798,30732
    print "This is a library! Use import sb_plotting_utils in your script to call the subrutines"call798,30732
    print "This is a library! Use import sb_plotting_utils in your script to call the subrutines"the798,30732
    print "This is a library! Use import sb_plotting_utils in your script to call the subrutines"subrutines798,30732

/Users/rs/data1/sw/esaspi/sb/sb_utils.py,1557
import pyfitspyfits2,20
def zero_pad_image(image, keep_radius):zero_pad_image9,261
def load_fits_im(file_name='', extension=None):load_fits_im28,725
def sqdistance(xcen, ycen, x, y):sqdistance64,1921
def sqdist_matrix(im, xcen, ycen):sqdist_matrix70,2059
def distance_matrix(im, xcen, ycen):distance_matrix82,2410
def distance_matrix_bin(im, xcen, ycen, rgrid):distance_matrix_bin92,2774
def get_cts_stat(im, distmatrix, xim, yim, r_aper):get_cts_stat106,3213
def get_cts_stat_annul(im, distmatrix, xim, yim, r_min, r_max):get_cts_stat_annul129,4009
def cal_aper_sum(im, distmatrix, xim, yim, r_aper):cal_aper_sum152,4888
def beta_model(pars, r):beta_model164,5214
def beta_model_likelihood(r, data, data_err, beta_pars):beta_model_likelihood182,5567
def arrays2minuit(x, y, y_err):arrays2minuit200,6036
def get_psf_king_pars(instrument, energy, theta):get_psf_king_pars214,6375
def king_profile(r, rcore, alpha):king_profile310,8676
def optibingrid(binnum=20, rmax=100, c=1.5):optibingrid337,9322
def optibin(im, xcen, ycen, rgrid):optibin352,9728
def extract_profile_generic(im, xcen, ycen):extract_profile_generic367,10110
def extract_profile_fast(im, distmatrix, xcen, ycen):extract_profile_fast404,11325
def extract_profile_fast2(im, distmatrix, rgrid):extract_profile_fast2423,12081
def extract_binned_sb_profiles(distmatrix, rgrid, im, expmap, bgmap, maskmap):extract_binned_sb_profiles438,12565
def trim_fftconvolve(image):trim_fftconvolve497,14761

/Users/rs/data1/sw/esaspi/sb/test_mock_ideal.py,802
    fname = '/Users/rs/w/xspt/data/dev/0559/sb/profile-lmfit-ideal-beta.tmp'fname8,171
    outfig = fname+'.dev.png'outfig9,248
    r_500_proj_ang = 100.0   # projected radius [arcsec]r_500_proj_ang12,338
    theta = 65.8443 / 60.0theta15,417
    energy = 1.5energy16,444
    instrument = "pn"instrument17,461
    psf_pars = (instrument, theta, energy)psf_pars18,483
    MAKE_CONTROL_PLOT = FalseMAKE_CONTROL_PLOT21,549
    FIT_BETA_MODEL = TrueFIT_BETA_MODEL22,579
    FIT_V06_MODEL = FalseFIT_V06_MODEL23,605
    ids = where(r<=r_500_proj_ang)ids33,921
    r = r[ids]r35,957
    sb_src = sb_src[ids]sb_src36,972
    sb_bg = sb_bg[ids]sb_bg37,997
    sb_src_err = sb_src_err[ids]sb_src_err38,1020
    sb_bg_err = sb_bg_err[ids]sb_bg_err39,1053
    n = len(r)n40,1084

/Users/rs/data1/sw/pythonlibs/rs/ads2arxiv.py,680
import syssys2,22
import rere3,33
import stringstring4,43
import fileinputfileinput5,57
    infile = sys.argv[1]infile16,360
        outfile = sys.argv[2]outfile18,410
        outfile = infileoutfile20,450
    replace_pattern = 'ArXiv e-prints'replace_pattern25,623
    template = 'arXiv: 'template26,662
    lines=[]lines35,914
    arxid=[]arxid36,927
    c = 0c37,940
        id = lines[c].find(search_pattern)id41,1019
        c = c + 1c46,1110
        arxivnum = string.strip(string.join(re.findall('[0-9]', lines[id+2]), ''))arxivnum50,1273
        arxivnum = arxivnum[0:4]+'.'+arxivnum[4:]arxivnum51,1356
    f = open(outfile, 'w')f58,1613

/Users/rs/data1/sw/pythonlibs/rs/arraytools.py,692
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
def equicountbin(x, binnum):equicountbin12,252
def forprint(*args):forprint47,1363

/Users/rs/data1/sw/pythonlibs/rs/astro_constants.py,217
c = float64(2.99792458e+8)                # [m/s]c2,8
G = float64(6.67300e-11)                  # m**3/kg/s**2G3,58
m2mpc = float64(1.0/3.08568025e+22)m2mpc4,115
kg2msol = float64(1.0/1.98892e+30)kg2msol5,151

/Users/rs/data1/sw/pythonlibs/rs/astrotools.py,1114
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import asciitable as atabatab11,251
def flux_to_luminosity(redshift, flux, h_0, omega_m_0, omega_de_0, omega_k_0):flux_to_luminosity13,278
    z = 0.4z39,874
    flux = 1.0e15               # cgsflux40,886
    h_0=70.0h_041,924
    omega_m_0=0.3omega_m_042,937
    omega_de_0=0.7omega_de_043,955
    omega_k_0=0.0omega_k_044,974
    lrad_calc = flux_to_luminosity(z, flux, h_0, omega_m_0, omega_de_0, omega_k_0)lrad_calc46,993

/Users/rs/data1/sw/pythonlibs/rs/cosmo_dist.py,2322
c = float64(2.99792458e+5)                  #  speed of light in km/sc29,1672
def resolve_curvature(omega_k_0, omega_m_0, omega_de_0):resolve_curvature31,1743
def ez_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, omega_r=0.0, w=-1.0):ez_func41,1981
def div_ez_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):div_ez_func51,2382
def dist_hubble(z=0.0, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_hubble63,2791
def dist_comov_rad(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_comov_rad74,3123
def dist_comov_trans(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_comov_trans89,3693
def dist_ang(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_ang112,4807
def dist_lum(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dist_lum122,5158
def comov_vol(z=0.0, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):comov_vol132,5505
def dvdz(z=0.5, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):dvdz157,6424
def batch_dist_ang(z, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):batch_dist_ang172,7093
def batch_dist_lum(z, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, w=-1.0):batch_dist_lum182,7400
    w=-0.5w205,8045
    z=3.0z206,8056
    h_0=70.0h_0207,8066
    omega_m_0=0.3omega_m_0208,8079
    omega_de_0=0.7omega_de_0209,8097
    omega_k_0=0.0omega_k_0210,8116
    ez=ez_func(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)ez212,8135
    dh = dist_hubble(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)dh213,8234
    dc = dist_comov_rad(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)dc214,8339
    dm = dist_comov_trans(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)dm215,8447
    da = dist_ang(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)da216,8557
    dl = dist_lum(z=z, h_0=h_0, omega_m_0=omega_m_0, omega_de_0=omega_de_0, omega_k_0=omega_k_0, w=w)dl217,8659

/Users/rs/data1/sw/pythonlibs/rs/cosmo_lss.py,4243
c = float64(2.99792458e+8)                # [m/s]c31,1383
G = float64(6.67300e-11)                  # m**3/kg/s**2G32,1433
m2mpc = float64(1.0/3.08568025e+22)m2mpc33,1490
kg2msol = float64(1.0/1.98892e+30)kg2msol34,1526
def sugiyama_gamma(h_0=70, omega_m_0=0.3, omega_b_0=0.05):sugiyama_gamma37,1563
def omega_m_z_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999):omega_m_z_func49,2141
def rho_crit_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999):rho_crit_func57,2420
def rho_m_z_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999):rho_m_z_func69,2897
def growth_supress_lcdm(omega_m_z = 0.3):growth_supress_lcdm80,3288
def mass2linscale(m=1.0e+15, rho_m_z = 4.0e+10):mass2linscale94,3600
def sigma_8_z_func(z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0 = 0.75):sigma_8_z_func103,3884
def gamma_exp_func(r=1.0, h_0=70, omega_m_0=0.3, omega_b_0=0.05):gamma_exp_func115,4300
def sigma_m_z_func(m=1.0, z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0 = 0.75):sigma_m_z_func125,4637
def Dsigm_m_z_Dm_approx(m=1.0, z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999):Dsigm_m_z_Dm_approx138,5308
def jenkins(sigma_m_z = 0.8):jenkins157,6108
def press_schechter(sigma_m_z = 0.8):press_schechter169,6464
def tinker08(sigma_m_z = array((0.0)), z=0.0, delta=200.0):tinker08179,6784
def num_counts(m=1.0, mass_func='press_schechter', z=0.3, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0=0.8):num_counts202,7426
def mass_integrate_num_counts(mmin=1.0e+13, mass_func='press_schechter', z=0.0, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0=0.8):mass_integrate_num_counts220,8221
def n_z(mass_func='press_schechter', mmin=1.0, z=0.0, h_0=70.0, omega_m_0=0.3, omega_de_0=0.7, omega_k_0=999.999, sigma_8_0=0.8):n_z226,8617
def virial_overdensity(omegamz):virial_overdensity236,9378
def c_bullock01(z=0.5, m_vir=1.0e14, m_star=2.112676e13):c_bullock01248,9769
    h_0=70.0h_0518,22318
    omega_dm_0 = 0.25omega_dm_0519,22331
    omega_b_0 = 0.05omega_b_0520,22353
    omega_m_0 = omega_dm_0 + omega_b_0omega_m_0521,22374
    omega_de_0 = 0.7omega_de_0522,22413
    omega_k_0 = 1.0 - omega_m_0 - omega_de_0omega_k_0523,22434
    sigma_8_0 = 0.8sigma_8_0524,22479
    npoints=120npoints526,22500
    z = linspace(0, 1.2, npoints)z528,22517
    omega_m_z = zeros(npoints, dtype=float64)omega_m_z529,22551
    delta_vir = zeros(npoints, dtype=float64)delta_vir530,22597
    import matplotlib.pyplot as pltmatplotlib539,22922
    import matplotlib.pyplot as pltplt539,22922
    import matplotlib.font_managermatplotlib540,22958
    import matplotlib.font_managerfont_manager540,22958
    fig_obj = plt.figure()fig_obj548,23303
    fig_name='delta_virial_z.png'fig_name549,23330
    headline_text = fig_obj.text(0.5, 0.95, '',headline_text550,23364
               horizontalalignment='center',horizontalalignment551,23412
               fontproperties=matplotlib.font_manager.FontProperties(size=16))fontproperties552,23457
    ax1 = fig_obj.add_subplot(111)                         # rows/cols/num of plotax1554,23537
             color='black',color561,23833
             linestyle='-',              # -/--/-./:linestyle562,23861
                 linewidth=1,                # linewidth=1linewidth563,23914
             marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker564,23973
             markerfacecolor='black',markerfacecolor565,24042
             markersize=0,               # markersize=6markersize566,24080
             label=r"data"               # '__nolegend__'label567,24136
    prop = matplotlib.font_manager.FontProperties(size=16)  # size=16prop585,24873

/Users/rs/data1/sw/pythonlibs/rs/cosmocal.py,4329
import syssys3,25
    verbose=1verbose16,411
    length=len(sys.argv)-1length17,425
    verbose=0verbose19,460
    length=len(sys.argv)length20,474
      z=float(sys.argv[1+verbose])/299790.    # velocity to redshiftz25,610
      z=float(sys.argv[1+verbose])            # redshiftz27,689
    H0 = 75                         # Hubble constantH028,746
    WM = 0.3                        # Omega(matter)WM29,800
    WV = 1.0 - WM - 0.4165/(H0*H0)  # Omega(vacuum) or lambdaWV30,852
    z=float(sys.argv[1+verbose])    # redshiftz34,988
    H0 = float(sys.argv[2+verbose]) # Hubble constantH035,1035
    WM = 0.3                        # Omega(matter)WM36,1089
    WV = 1.0 - WM - 0.4165/(H0*H0)  # Omega(vacuum) or lambdaWV37,1141
    z=float(sys.argv[1+verbose])    # redshiftz41,1271
    H0 = float(sys.argv[2+verbose]) # Hubble constantH042,1318
    WM = float(sys.argv[3+verbose]) # Omega(matter)WM43,1372
    WV = 0.0                        # Omega(vacuum) or lambdaWV44,1424
    z=float(sys.argv[1+verbose])    # redshiftz48,1553
    H0 = float(sys.argv[2+verbose]) # Hubble constantH049,1600
    WM = float(sys.argv[3+verbose]) # Omega(matter)WM50,1654
    WV = float(sys.argv[4+verbose]) # Omega(vacuum) or lambdaWV51,1706
  WR = 0.        # Omega(radiation)WR60,1880
  WK = 0.        # Omega curvaturve = 1-Omega(total)WK61,1916
  c = 299792.458 # velocity of light in km/secc62,1969
  Tyr = 977.8    # coefficent for converting 1/H into GyrTyr63,2016
  DTT = 0.5      # time from z to now in units of 1/H0DTT64,2074
  DTT_Gyr = 0.0  # value of DTT in GyrDTT_Gyr65,2129
  age = 0.5      # age of Universe in units of 1/H0age66,2168
  age_Gyr = 0.0  # value of age in Gyrage_Gyr67,2220
  zage = 0.1     # age of Universe at redshift z in units of 1/H0zage68,2259
  zage_Gyr = 0.0 # value of zage in Gyrzage_Gyr69,2325
  DCMR = 0.0     # comoving radial distance in units of c/H0DCMR70,2365
  DCMR_Mpc = 0.0 DCMR_Mpc71,2426
  DCMR_Gyr = 0.0DCMR_Gyr72,2444
  DA = 0.0       # angular size distanceDA73,2461
  DA_Mpc = 0.0DA_Mpc74,2502
  DA_Gyr = 0.0DA_Gyr75,2517
  kpc_DA = 0.0kpc_DA76,2532
  DL = 0.0       # luminosity distanceDL77,2547
  DL_Mpc = 0.0DL_Mpc78,2586
  DL_Gyr = 0.0   # DL in units of billions of light yearsDL_Gyr79,2601
  V_Gpc = 0.0V_Gpc80,2659
  a = 1.0        # 1/(1+z), the scale factor of the Universea81,2673
  az = 0.5       # 1/(1+z(object))az82,2734
  h = H0/100.h84,2770
  WR = 4.165E-5/(h*h)   # includes 3 massless neutrino species, T0 = 2.72528WR85,2784
  WK = 1-WM-WR-WVWK86,2861
  az = 1.0/(1+1.0*z)az87,2879
  age = 0.age88,2900
  n=1000         # number of points in integralsn89,2911
    a = az*(i+0.5)/na91,2981
    adot = sqrt(WK+(WM/a)+(WR/(a*a))+(WV*a*a))adot92,3002
    age = age + 1./adotage93,3049
  zage = az*age/nzage95,3074
  zage_Gyr = (Tyr/H0)*zagezage_Gyr96,3092
  DTT = 0.0DTT97,3119
  DCMR = 0.0DCMR98,3131
    a = az+(1-az)*(i+0.5)/na102,3234
    adot = sqrt(WK+(WM/a)+(WR/(a*a))+(WV*a*a))adot103,3262
    DTT = DTT + 1./adotDTT104,3309
    DCMR = DCMR + 1./(a*adot)DCMR105,3333
  DTT = (1.-az)*DTT/nDTT107,3364
  DCMR = (1.-az)*DCMR/nDCMR108,3386
  age = DTT+zageage109,3410
  age_Gyr = age*(Tyr/H0)age_Gyr110,3427
  DTT_Gyr = (Tyr/H0)*DTTDTT_Gyr111,3452
  DCMR_Gyr = (Tyr/H0)*DCMRDCMR_Gyr112,3477
  DCMR_Mpc = (c/H0)*DCMRDCMR_Mpc113,3504
  ratio = 1.00ratio117,3562
  x = sqrt(abs(WK))*DCMRx118,3577
      ratio =  0.5*(exp(x)-exp(-x))/x ratio121,3631
      ratio = sin(x)/xratio123,3680
    y = x*xy125,3711
    ratio = 1. + y/6. + y*y/120.ratio127,3745
  DCMT = ratio*DCMRDCMT128,3778
  DA = az*DCMTDA129,3798
  DA_Mpc = (c/H0)*DADA_Mpc130,3813
  kpc_DA = DA_Mpc/206.264806kpc_DA131,3834
  DA_Gyr = (Tyr/H0)*DADA_Gyr132,3863
  DL = DA/(az*az)DL133,3886
  DL_Mpc = (c/H0)*DLDL_Mpc134,3904
  DL_Gyr = (Tyr/H0)*DLDL_Gyr135,3925
  ratio = 1.00ratio139,3980
  x = sqrt(abs(WK))*DCMRx140,3995
      ratio = (0.125*(exp(2.*x)-exp(-2.*x))-x/2.)/(x*x*x/3.)ratio143,4049
      ratio = (x/2. - sin(2.*x)/4.)/(x*x*x/3.)ratio145,4120
    y = x*xy147,4175
    ratio = 1. + y/5. + (2./105.)*y*yratio149,4209
  VCM = ratio*DCMR*DCMR*DCMR/3.VCM150,4247
  V_Gpc = 4.*pi*((0.001*c/H0)**3)*VCMV_Gpc151,4279

/Users/rs/data1/sw/pythonlibs/rs/get_kcorr.py,741
import syssys2,22
import osos3,33
import randomrandom4,43
def create_xspec_script(bandmin=0.5, bandmax=2.0, z=0.5, t=2.0, a=0.3, psufix=0.0):create_xspec_script9,80
def create_xspec_driver(bandmin=0.5, bandmax=2.0, z=0.5, t=2.0, a=0.3, psufix=0.0):create_xspec_driver44,1197
def cleanup_kcorr_files():cleanup_kcorr_files66,1816
def calc_kcorr(bandmin=0.5, bandmax=2.0, z=0.5, t=2.0, a=0.3):calc_kcorr71,1948
    bandmin = double(sys.argv[1])bandmin95,2901
    bandmax = double(sys.argv[2])bandmax96,2935
    z       = double(sys.argv[3])z97,2969
    t       = double(sys.argv[4])t98,3003
    a       = double(sys.argv[5])a99,3037
    kcorr = calc_kcorr(bandmin=bandmin, bandmax=bandmax, z=z, t=t, a=a)kcorr101,3072

/Users/rs/data1/sw/pythonlibs/rs/naivesumm.py,376
          class="tooltipped downwards"class122,5892
          title="Account settings ">title123,5931
                           title="Clicking this button will automatically fork this project so you can edit the file"title423,19118
                           href="/amsqr/NaiveSumm/edit/master/naivesumm.py"href424,19236
      title="Switch themes">title824,85700

/Users/rs/data1/sw/pythonlibs/rs/nfw_extrapolator.py,2167
import syssys2,22
import osos3,33
import mathmath4,43
def func_x_f(f):func_x_f10,174
def g_xy(x,y):g_xy24,436
def get_mass_from_virial(z, m_vir, delta_vir, delta_h, omegam_z, H0):get_mass_from_virial31,695
def aux_func_1(m_vir, z, delta_vir, delta_h, omegam_z, H0, m_targ):aux_func_170,2323
def extrapolate_mass(z, m1, h1, o1, h2, o2, omegam_z, H0):extrapolate_mass80,2617
    H0    = 70.4                 # at z=0, [km/s/Mpc]H0136,4976
    OmegaL = 0.728               # at z=0OmegaL137,5030
    OmegaM = 0.272               # at z=0OmegaM138,5072
    z = 0.0              # halo redshiftz143,5220
    m1 =  1e14           # input mass: 'm1' is mass at overdensity 'h1' times 'c1' densitym1144,5261
    h1 = 500.0           # input overdensityh1145,5352
    o1 = 'c'             # input reference density: 'c' - critical, 'm' - mean mattero1146,5397
    h2 = 200.0           # output overdensityh2147,5483
    o2 = 'c'             # output reference density: 'c' - critical, 'm' - mean mattero2148,5529
    m2 = 0.0             # output mass: 'm2' is mass at overdensity 'h2' times 'c2' densitym2149,5616
    omegam_z = omega_m_z_func(z=z, h_0=H0, omega_m_0=OmegaM, omega_de_0=OmegaL, omega_k_0=0)omegam_z154,5817
    answer = extrapolate_mass(z, m1, h1, o1, h2, o2, omegam_z, H0)answer155,5910
        delta_h = h2 / omegam_zdelta_h162,6209
        delta_h = h2delta_h164,6259
    masses = logspace(13.0, 15.0, num=5)masses200,7665
    redshifts = linspace(0.0, 1.0, num=5)redshifts201,7706
            omegam_z = omega_m_z_func(z=z, h_0=H0, omega_m_0=OmegaM, omega_de_0=OmegaL, omega_k_0=0)omegam_z207,7926
            answer = extrapolate_mass(z, m1, h1, o1, h2, o2, omegam_z, H0)answer208,8027
                delta_h = h2 / omegam_zdelta_h215,8394
                delta_h = h2delta_h217,8460

/Users/rs/data1/sw/pythonlibs/rs/orgtools.py,249
import syssys9,163
import osos10,174
import mathmath11,184
def print_orgtbl_header(border=2, rules="all", frame="frame"):print_orgtbl_header13,197
def print_orgfig_header(figname=None, title="Figure", label=None):print_orgfig_header17,348

/Users/rs/data1/sw/pythonlibs/rs/readcol.py,231
import stringstring2,1
def readcol(filename,skipline=0,names=False,dtype='float',fsep=None,twod=False,comment='#',verbose=True):readcol7,79

/Users/rs/data1/sw/pythonlibs/rs/summarize_data.py,384
import mathmath2,22
def stat_summary(x):stat_summary6,79
    intab = 'z2.dat'intab66,2246
    dat=loadtxt(intab, dtype='string', comments='#', delimiter=None, converters=None,dat67,2267
        usecols=(0,1,2)usecols69,2387
    id = double(dat[:,0])id71,2421
    z = double(dat[:,1])z72,2447
    z_err = double(dat[:,2])z_err73,2472

/Users/rs/data1/sw/pythonlibs/rs/test_cosmo_dist.py,4143
import matplotlib.pyplot as pltmatplotlib4,67
import matplotlib.pyplot as pltplt4,67
import matplotlib.font_managermatplotlib5,99
import matplotlib.font_managerfont_manager5,99
    zgrid=linspace(0,5,1e2)zgrid13,280
    h_0=74.0h_014,308
    omega_m_0=1.0omega_m_015,321
    omega_de_0=0.0omega_de_016,339
    omega_k_0=0.0omega_k_017,358
    norm = 1.0/(h_0 * 1.022690322853555e-3)norm18,376
    t=[]t20,421
        color='black',color25,590
        linestyle='-',              # -/--/-./:linestyle26,613
        linewidth=1,                # linewidth=1linewidth27,661
        marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker28,711
        markerfacecolor='black',markerfacecolor29,775
        markersize=0,               # markersize=6markersize30,808
    h_0=74.0h_035,944
    omega_m_0=0.05omega_m_036,957
    omega_de_0=0.0omega_de_037,976
    omega_k_0=1-omega_m_0-omega_de_0omega_k_038,995
    norm = 1.0/(h_0 * 1.022690322853555e-3)norm39,1032
    t=[]t41,1077
        color='black',color46,1246
        linestyle=':',              # -/--/-./:linestyle47,1269
        linewidth=1,                # linewidth=1linewidth48,1317
        marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker49,1367
        markerfacecolor='black',markerfacecolor50,1431
        markersize=0,               # markersize=6markersize51,1464
    h_0=74.0h_056,1600
    omega_m_0=0.2omega_m_057,1613
    omega_de_0=0.8omega_de_058,1631
    omega_k_0=0.0omega_k_059,1650
    norm = 1.0/(h_0 * 1.022690322853555e-3)norm60,1668
    t=[]t62,1713
        color='black',color67,1882
        linestyle='--',              # -/--/-./:linestyle68,1905
        linewidth=1,                # linewidth=1linewidth69,1954
        marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker70,2004
        markerfacecolor='black',markerfacecolor71,2068
        markersize=0,               # markersize=6markersize72,2101
    zgrid=linspace(0,5,1e2)zgrid77,2219
    h_0=74.0h_078,2247
    omega_m_0=1.0omega_m_079,2260
    omega_de_0=0.0omega_de_080,2278
    omega_k_0=0.0omega_k_081,2297
    norm = 1.0/(h_0 * 1.022690322853555e-3)norm82,2315
    t=[]t84,2360
        color='black',color89,2519
        linestyle='-',              # -/--/-./:linestyle90,2542
        linewidth=1,                # linewidth=1linewidth91,2590
        marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker92,2640
        markerfacecolor='black',markerfacecolor93,2704
        markersize=0,               # markersize=6markersize94,2737
    h_0=74.0h_099,2873
    omega_m_0=0.05omega_m_0100,2886
    omega_de_0=0.0omega_de_0101,2905
    omega_k_0=1-omega_m_0-omega_de_0omega_k_0102,2924
    norm = 1.0/(h_0 * 1.022690322853555e-3)norm103,2961
    t=[]t105,3006
        color='black',color110,3165
        linestyle=':',              # -/--/-./:linestyle111,3188
        linewidth=1,                # linewidth=1linewidth112,3236
        marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker113,3286
        markerfacecolor='black',markerfacecolor114,3350
        markersize=0,               # markersize=6markersize115,3383
    h_0=74.0h_0120,3519
    omega_m_0=0.2omega_m_0121,3532
    omega_de_0=0.8omega_de_0122,3550
    omega_k_0=0.0omega_k_0123,3569
    norm = 1.0/(h_0 * 1.022690322853555e-3)norm124,3587
    t=[]t126,3632
        color='black',color131,3791
        linestyle='--',              # -/--/-./:linestyle132,3814
        linewidth=1,                # linewidth=1linewidth133,3863
        marker='',                  # ./o/*/+/x/^/</>/v/s/p/h/Hmarker134,3913
        markerfacecolor='black',markerfacecolor135,3977
        markersize=0,               # markersize=6markersize136,4010

/Users/rs/data1/sw/pythonlibs/rs/timer.py,194
import timetime1,0
class Timer(object):Timer3,13
    def __init__(self, verbose=False):__init__4,34
    def __enter__(self):__enter__7,105
    def __exit__(self, *args):__exit__11,184

/Users/rs/data1/sw/pythonlibs/rs/xmatch_catalog_stat.py,1726
import syssys2,22
import osos3,33
import mathmath4,43
import pyfitspyfits5,55
import matplotlib.pyplot as pltmatplotlib8,110
import matplotlib.pyplot as pltplt8,110
import matplotlib.font_managermatplotlib9,142
import matplotlib.font_managerfont_manager9,142
import asciitable as atabatab11,251
def summarize_xmatch(data, threshold, num_obj_parent1, area, sdensity1, sdensity2):summarize_xmatch18,423
def plt_separation_hist(seps, figname, plot_title=None):plt_separation_hist65,2343
def plt_redshift_hist(redshift, figname, plot_title=None):plt_redshift_hist144,5675
    num_obj_parent1 = 158num_obj_parent1232,9276
    area = 720                     # [deg]area233,9302
    sdensity1 = 0.22                # [deg**-2]sdensity1234,9345
    sdensity2 = 31.5               # [deg**-2] sumss at xbcs coresdensity2235,9393
    apertures = (15,)apertures238,9491
        threshold=aper                    # asecthreshold244,9573
        cat_file='/Users/rs/w/xspt/ps/bcg/spt_bcg_song12-sumss-'+str(threshold)+'asec.cat'cat_file245,9622
        matchtype='all'matchtype246,9713
        figname=cat_file+'.sep.png'figname247,9737
        zfigname=cat_file+'.z.png'zfigname248,9773
        title='SPT BCG with SUMSS ('+str(threshold)+'")'title249,9808
        data = atab.read(cat_file)data254,9961
